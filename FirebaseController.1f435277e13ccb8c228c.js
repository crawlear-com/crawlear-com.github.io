"use strict";(self.webpackChunkcrawlear_com=self.webpackChunkcrawlear_com||[]).push([[2797],{64730:(t,s,a)=>{a.r(s),a.d(s,{default:()=>r}),a(76124);var e=a(29525),i=(a(66267),a(76953),a(51019)),o=a(39828),c=a(6118);const r=class{constructor(t){this.app=t.app,this.provider=t.provider,this.auth=t.auth,this.db=t.db,this.rdb=t.rdb,this.fbBase=t}async userSearch(t,s,a){try{const a=(0,o.hJ)(this.db,"users"),e=(0,o.IO)(a,(0,o.Xo)("displayName"),(0,o.e0)(t),(0,o.b9)(10)),i=await(0,o.PL)(e),c=[];i.forEach((t=>{const s=t.data();c.push({uid:t.id,displayName:s.displayName,photoURL:s.photoURL})})),s&&s(c)}catch(t){a&&a(t)}}async getUser(t,s,a){const e=(0,o.JU)(this.db,"users",t),i=await(0,o.QT)(e);if(i.exists()){const t=i.data();t.uid=e.id,s&&s(t)}else a&&a()}async getUserExtraData(t,s,a){try{const a={};let e=(0,o.IO)((0,o.hJ)(this.db,"games"),(0,o.ar)("uids","array-contains",t)),i=await(0,o.PL)(e);a.pilotGames=i.docs.length,e=(0,o.IO)((0,o.hJ)(this.db,"games"),(0,o.ar)("jids","array-contains",t)),i=await(0,o.PL)(e),a.judgeGames=i.docs.length,e=(0,o.IO)((0,o.hJ)(this.db,"routes"),(0,o.ar)("uids","array-contains",t)),i=await(0,o.PL)(e),a.routes=i.docs.length,s&&s(a)}catch(t){a&&a()}}async setUser(t,s,a){let{uid:e,displayName:i,photoURL:c,description:r,instagram:n}=t;const d={displayName:i,photoURL:c,registrationDate:(new Date).toString(),description:r||"",instagram:n||""};try{await(0,o.pl)((0,o.JU)(this.db,"users",e),d),s&&s(d)}catch(t){a&&a()}}transformGamesIntoData(t){return{name:t.name,uids:t.uids,jids:t.jids,date:t.date,location:t.location,gameType:t.gameType,players:t.players,judges:t.judges||[],isPublic:t.isPublic,maxTime:t.maxTime,maxPoints:t.maxPoints,zones:t.zones,gates:t.gates,gameStatus:t.gameStatus,owner:t.owner,courtesyTime:t.courtesyTime}}transformGamesIntoModel(t){let s=[];return t.forEach((t=>{let a;const i=t.data();i.zones||(i.players.forEach((t=>{t.zones=[{fiascoControlTextValues:[],controlTextValues:[],gateProgression:1,gateProgressionData:[],gatesWithBonification:0,gatesWithFail:0,judgedBy:[],points:t.points,totalPoints:t.points,simpathyPoints:0,time:t.time,handicap:0}],t.totalTime=t.time,t.totalPoints=t.points,t.totalGateProgression=1})),i.gates=[1],i.zones=1),a=new e.Game(i.name,i.date,i.location,i.isPublic,i.gameType,i.players,i.judges||[],i.maxTime,i.maxPoints,i.gates,i.zones,i.gameStatus,i.uids,i.jids,i.owner),a.setGameId(t.id),s.push(a)})),s}async getGame(t,s,a){const e=(0,o.JU)(this.db,"games",t),i=await(0,o.QT)(e);if(i.exists()){const t=i.data();t.gid=e.id,s&&s(t)}else a&&a()}async getGamesFromUser(t,s,a,e){try{const e=[],i=(0,o.IO)((0,o.hJ)(this.db,"games"),(0,o.ar)("uids","array-contains",t),(0,o.ar)("gameStatus","<",2));(await(0,o.PL)(i)).docs.forEach((a=>{const i=a.data();(!i.jids||i.jids.indexOf(t)<0)&&(s&&i.isPublic||!s)&&e.push(a)})),a&&a(this.transformGamesIntoModel(e))}catch(t){e&&e()}}async getGamesFromJudge(t,s,a,e){try{const e=[],i=(0,o.IO)((0,o.hJ)(this.db,"games"),(0,o.ar)("jids","array-contains",t),(0,o.ar)("gameStatus","<",2));(await(0,o.PL)(i)).docs.forEach((t=>{const a=t.data();(s&&a.isPublic||!s)&&e.push(t)})),a&&a(this.transformGamesIntoModel(e))}catch(t){e&&e()}}async getFinishedGamesFromUid(t,s,a){try{const a=(0,o.IO)((0,o.hJ)(this.db,"games"),(0,o.xD)((0,o.ar)("gameStatus","==",2),(0,o.or)((0,o.ar)("uids","array-contains",t),(0,o.ar)("jids","array-contains",t)))),e=await(0,o.PL)(a);s&&s(this.transformGamesIntoModel(e.docs))}catch(t){a&&a()}}async setGame(t,s,a){try{const a=await(0,o.ET)((0,o.hJ)(this.db,"games"),this.transformGamesIntoData(t));t.gid=a.id,s&&s(t)}catch(t){a&&a()}}updateGame(t){(0,o.r7)((0,o.JU)(this.db,"games",t.gid),this.transformGamesIntoData(t))}async removeGame(t){await(0,o.oe)((0,o.JU)(this.db,"games",t)),(0,i.Od)((0,i.iH)(this.rdb,"gameProgression/".concat(t,"/"))),(0,i.Od)((0,i.iH)(this.rdb,"presenceRequests/".concat(t,"/")))}async removeIdFromGame(t,s,a){const e=(0,o.JU)(this.db,"games",t.gid),i=await(0,o.QT)(e);if(i.exists()){const e=i.data(),c=e[a].indexOf(s);e.gid=i.id,e[a].splice(c,1);const r=this.transformGamesIntoData(e),n={};return n[a]=r[a],r[a]=n[a],(0,o.r7)((0,o.JU)(this.db,"games",t.gid),n),e}return t}async setGpx(t,s,a){try{if(t.gid)await(0,o.pl)((0,o.JU)(this.db,"gpx",t.gid),{data:t.data}),s&&s(t);else{const a=await(0,o.ET)((0,o.hJ)(this.db,"gpx"),{data:t.data});t.gid=a.id,s&&s(t)}}catch(t){a&&a()}}async getLovedRoutes(t,s,a){try{const a=(0,o.IO)((0,o.hJ)(this.db,"routeLove"),(0,o.ar)("uid","==",t));(await(0,o.PL)(a)).docs.forEach((async t=>{const a=t.data();await this.getRoute(a.rid,!1,(t=>{t.rid=a.rid,s(t)}),(()=>{}))}))}catch(t){a&&a()}}async getRouteLove(t,s,a,e){try{const e=(0,o.IO)((0,o.hJ)(this.db,"routeLove"),(0,o.ar)("uid","==",t),(0,o.ar)("rid","==",s)),i=await(0,o.PL)(e);a&&a(i.docs.length>0,i.docs[0].id)}catch(t){e&&e()}}async loveRoute(t,s,a,e){try{const e=await(0,o.ET)((0,o.hJ)(this.db,"routeLove"),{uid:t,rid:s});a&&a(e.id)}catch(t){e&&e()}}async unloveRoute(t,s,a){try{await(0,o.oe)((0,o.JU)(this.db,"routeLove",t)),s&&s()}catch(t){a&&a()}}async setRoute(t,s,a){this.setGpx(t.gpx,(async e=>{try{const i=t.transformIntoData(e.gid);if(t.rid&&e.gid)await(0,o.pl)((0,o.JU)(this.db,"routes",t.rid),i);else if(e.gid){t.gpx=e.gid;const s=await(0,o.ET)((0,o.hJ)(this.db,"routes"),i);t.rid=s.id}else a&&a();t.gpx=e,s&&s(t)}catch(t){a&&a()}}),(()=>{a&&a()}))}async getRoutesFromUser(t,s,a){try{const e=[],i=(0,o.IO)((0,o.hJ)(this.db,"routes"),(0,o.ar)("uids","array-contains",t));(await(0,o.PL)(i)).docs.forEach((t=>{const i=t.data();i.gpx?this.fbBase.getGpx(i.gpx,(a=>{i.gpx=a,i.gpx.gid=a.gid,e.push({...i,rid:t.id}),s&&s(e)}),a):(e.push({...t.data(),rid:t.id}),s&&s(e))}))}catch(t){a&&a()}}async removeRoute(t,s,a,e){s&&await(0,o.oe)((0,o.JU)(this.db,"gpx",s)),await(0,o.oe)((0,o.JU)(this.db,"routes",t)),a&&a()}setUserInContext(t,s){t.instagram=t.instagram||"",window.crawlear={...window.crawlear,user:t},window.crawlear.user.uid=s}logout(){(0,c.v0)().signOut(),window.crawlear.user={}}getUserGameRequests(t,s,a,e,o){const c=(0,i.iH)(this.rdb,"gameRequests/".concat(t));(0,i.yv)(c,(t=>{const s={};s[t.key]=t.val(),e(s)})),(0,i.MQ)(c,(t=>{o(t.key)}))}getGameProgressionOnce(t,s,a){(0,i.U2)((0,i.iH)(this.rdb,"gameProgression/".concat(t))).then((t=>{s&&s(t.key,t.val())}),a)}getGameProgression(t,s,a,e,o){const c=(0,i.iH)(this.rdb,"gameProgression/".concat(t));(0,i.yv)(c,(t=>{e(t.key,t.val())})),(0,i.Jr)(c,(t=>{o(t.key,t.val())}))}setGameProgression(t,s,a,e,o){(0,i.t8)((0,i.iH)(this.rdb,"gameProgression/".concat(t,"/").concat(a,"/").concat(s,"/").concat(e)),o)}removeGameProgression(t){(0,i.Od)((0,i.iH)(this.rdb,"gameProgression/".concat(t)))}getGameResult(t,s,a){(0,i.U2)((0,i.iH)(this.rdb,"gameProgression/".concat(t.gid))).then((a=>{const e=a.val();Object.entries(e).forEach(((s,a)=>{Object.entries(s[1]).forEach(((s,e)=>{s[1].data&&(t.players[a].zones[e]=s[1].data)}))})),s&&s(t)}),a)}createGameProgression(t){for(let s=0;s<t.players.length;s++)for(let a=0;a<t.zones;a++)this.setGameProgression(t.gid,t.players[s].id,t.players[s].group,a,{status:"waiting",data:{}})}acceptGameRequest(t,s){(0,i.t8)((0,i.iH)(this.rdb,"gameRequests/".concat(t,"/").concat(s,"/status/")),"accepted"),(0,i.Od)((0,i.iH)(this.rdb,"gameRequests/".concat(t,"/").concat(s,"/")))}rejectGameRequest(t,s){(0,i.t8)((0,i.iH)(this.rdb,"gameRequests/".concat(t,"/").concat(s,"/status/")),"rejected"),(0,i.Od)((0,i.iH)(this.rdb,"gameRequests/".concat(t,"/").concat(s,"/")))}setUserGameRequest(t,s,a,e,o){const c=(0,i.VF)((0,i.iH)(this.rdb,"gameRequests/".concat(a,"/")),{fromUid:t,fromName:s,toUid:a,gameName:e,date:(new Date).toLocaleDateString(),status:"pending"});onValue(c,(t=>{const s=t.val();s&&o(s,s.status)}))}setDirectorPresenceRequest(t,s,a,e,o){const c=(0,i.VF)((0,i.iH)(this.rdb,"presenceRequests/".concat(t,"/")),{zone:s,playerName:a,fromName:e,date:(new Date).toLocaleDateString(),status:"pending"});onValue(c,(t=>{const s=t.val();s&&o(s,t.key)}))}getDirectorPresenceRequest(t,s,a){const e=(0,i.iH)(this.rdb,"presenceRequests/".concat(t));(0,i.yv)(e,(t=>{s(t.key,t.val())})),(0,i.Jr)(e,(t=>{a(t.key,t.val())}))}acceptDirectorPresenceRequest(t,s){(0,i.t8)((0,i.iH)(this.rdb,"presenceRequests/".concat(t,"/").concat(s,"/status/")),"accepted")}removeDirectorPresenceRequest(t){(0,i.Od)((0,i.iH)(this.rdb,"presenceRequests/".concat(t)))}async setPost(t,s,a,e,i,c,r){const n={uid:t,gid:i,date:a,url:s,text:e};if(e.length>=0&&s.length>=0)try{const t=await(0,o.ET)((0,o.hJ)(this.db,"socialPosts"),n);n.pid=t.id,c&&c(n)}catch(t){r&&r()}else r&&r()}async setFollow(t,s,a,e){try{const e=await(0,o.ET)((0,o.hJ)(this.db,"follows"),{fromUid:t,toUid:s});a&&a(e.id)}catch(t){e&&e()}}async removeFollow(t,s,a){await(0,o.oe)((0,o.JU)(this.db,"follows",t)),s&&s()}async getPost(t,s,a){const e=(0,o.JU)(this.db,"socialPosts",t),i=await(0,o.QT)(e);if(i.exists()){const t=i.data();t.pid=e.id,s(t)}else a()}async getPosts(t,s,a){try{const a=(0,o.IO)((0,o.hJ)(this.db,"socialPosts"),(0,o.ar)("uid","==",t),(0,o.Xo)("date","desc"),(0,o.b9)(10)),e=await(0,o.PL)(a),i=[];e.docs.forEach((t=>{i.push({...t.data(),pid:t.id})})),s&&s(i)}catch(t){a&&a()}}async getPostsFromFollowFeed(t,s,a){try{const a=[],e=(0,o.IO)((0,o.hJ)(this.db,"follows"),(0,o.ar)("fromUid","==",t)),i=(await(0,o.PL)(e)).docs;for(;i.length>0;){const t=[];i.splice(0,10).forEach((s=>{const a=s.data();t.push(a.toUid)}));const s=(0,o.IO)((0,o.hJ)(this.db,"socialPosts"),(0,o.ar)("uid","in",t),(0,o.Xo)("date","desc"),(0,o.b9)(10));(await(0,o.PL)(s)).docs.forEach((t=>{const s=t.data();s.pid=t.id,a.push(s)}))}s&&s(a)}catch(t){a&&a()}}async removePost(t,s,a){await(0,o.oe)((0,o.JU)(this.db,"socialPosts",t)),this.removeLikes(t,10),s&&s()}async getPostLikesCount(t,s,a){try{const a=(0,o.IO)((0,o.hJ)(this.db,"likes"),(0,o.ar)("pid","==",t),(0,o.b9)(15)),e=(await(0,o.PL)(a)).docs.length;s&&s(e)}catch(t){a&&a()}}async getIfPostIsLiked(t,s,a,e){try{const e=(0,o.IO)((0,o.hJ)(this.db,"likes"),(0,o.ar)("uid","==",s),(0,o.ar)("pid","==",t),(0,o.b9)(1)),i=await(0,o.PL)(e),c=1===i.docs.length;a&&a(c,c?i.docs[0].id:"")}catch(t){e&&e()}}async getFidFromFollow(t,s,a,e){try{const e=(0,o.IO)((0,o.hJ)(this.db,"follows"),(0,o.ar)("fromUid","==",t),(0,o.ar)("toUid","==",s),(0,o.b9)(1)),i=await(0,o.PL)(e),c=1===i.docs.length?i.docs[0].id:-1;a&&a(c)}catch(t){e&&e()}}async setLike(t,s,a,e){const i={pid:t,uid:s};try{const t=await(0,o.ET)((0,o.hJ)(this.db,"likes"),i);a&&a(t.id)}catch(t){e&&e()}}async removeLike(t,s,a){await(0,o.oe)((0,o.JU)(this.db,"likes",t)),s&&s()}async removeLikes(t,s){const a=(0,o.IO)((0,o.hJ)(this.db,"likes"),(0,o.ar)("pid","==",t),(0,o.Xo)("__name__"),(0,o.b9)(s));return new Promise(((t,s)=>{this.deleteQueryBatch(a,t).catch(s)}))}async deleteQueryBatch(t,s){const a=await(0,o.PL)(t);0!==a.size?(a.docs.forEach((async t=>{const s=(0,o.qs)(this.db);s.delete(t.ref),s.commit()})),setTimeout((()=>{this.deleteQueryBatch(t,s)}),100)):s()}}}}]);