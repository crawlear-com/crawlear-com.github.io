{"version":3,"sources":["resources/img/logo.png","Utils.js","components/Picker.js","components/PlayerItem.js","Analytics.js","components/PlayerController.js","components/GameTypeController.js","resources/img/img00.png","components/MainPageTextContent.js","components/GameMenu.js","components/WinnerTable.js","components/TimerControl.js","components/ControlText.js","components/ControlTextArray.js","components/MaxTimePicker.js","components/games/TotalTimeGame.js","components/games/KingGame.js","components/games/PointsGame.js","components/GameTypePlayer.js","components/GameController.js","resources/img/img01.png","resources/img/img02.png","resources/img/img03.png","components/AboutUs.js","components/Footer.js","resources/1 24 REGLAMENTO CRAWLER DEPORTIVO Y TECNICO 2021 V1 BORRADOR 19-1-2021.pdf","components/Menu.js","App.js","reportWebVitals.js","language/i18n.js","index.js"],"names":["Utils","millis","minutes","Math","floor","h","m","s","toFixed","mm","date","Date","todayRef","setHours","setMinutes","setSeconds","getTime","time","String","padStart","array","randomIndex","currentIndex","length","random","Picker","callback","minValue","maxValue","initialValue","value","elementRef","React","arrowClick","operation","result","Number","current","innerText","className","onClick","event","ref","PlayerItem","player","i","onRemovePlayer","onHandicapChange","t","useTranslation","contasinerRef","name","classList","toggle","src","avatar","alt","handicap","id","stopPropagation","isLocalhost","document","location","href","indexOf","Analytics","code","ReactGA","initialize","path","pageview","category","action","updatePlayerAfterVersionChange","players","PlayerController","onPlayerNumerChange","key","defaultValue","serialize","JSON","stringify","deserialize","parse","valueLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","removeItem","setItem","useLocalStorageState","setPlayers","inputRef","inputId","now","removePlayer","newPlayers","target","filter","a","item","playersTxt","map","randomizeArray","trim","push","points","GameTypeController","onGameTypeChange","onPointsTypeChange","selectedGameType","selectedPointsType","labelsGameType","textsGameType","labelsPointsType","textsPointsType","gameType","pointsType","onChange","selected","selectedIndex","MainPageTextContent","headLogo","GameMenu","beginGame","alertBoxRef","gameSelected","pointsTypeSelected","WinnerTable","mode","goToMenu","winnerId","finalWinner","found","findWinner","printTime","millisToTime","TimerControl","onPlayPauseChange","timeValue","ControlText","text","step","onValueChange","isNegativeControl","boldValue","updateValue","getControlClass","initialClass","ControlTextArray","pointsMode","controlArray","controlTextValues","MaxTimePicker","onMaxTimeChange","hours","seconds","setTime","values","setValues","newValues","timeToMillis","calculateTime","STATE_PLAY","STATE_PAUSE","tickTime","timer","initControlTestValues","maxPoints","maxTime","newState","timeStart","currentPlayer","Array","j","TotalTimeGame","onGameEnd","onEndPlayer","scrollTo","previousInputs","sort","b","bypoints","getWinner","clearInterval","setInterval","timerCount","finalTime","controlTextArray","maxTimeControl","fiasco","maxTimePicker","control","onChangeScore","KingGame","order","changePointsOnScoreChange","index","newArray","splice","getPlayersOrder","findIndex","toUpperCase","winner","MAX_POINTS","PointsGame","props","minPoints","GameTypePlayer","elementsToRender","winnerPlayer","GameController","gameStatus","add","innerHTML","cleanAlertBox","message","remove","showAlertBox","AboutUs","onLinkClicked","img01","img02","img03","Footer","Menu","isOpen","setIsOpen","onMenuClick","clickAction","dataset","link","pdf","App","stateComponent","useState","useEffect","init","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","LanguageDetector","initReactI18next","debug","fallbackLng","interpolation","escapeValue","resources","en","translation","content","aboutus","aboutus1","aboutus2","aboutus3","welcomeMessage","instrucciones","instrucciones1","maxTimeText1","maxTimeText2","error","nojugadores","description","jugadores","nuevojugador","ordenaleatorio","empezar","atras","ganador","tiempo","puntos","finjugador","total","ordenruta","fin","reset","continuar","tiempomaximo","zonas","puntosmaximo","vuelco","tocar","puerta","saltoobstaculo","reparacion","winch","puertaprogresion","distancia","anclajeindebido","juez","gametype","modojuego","tipopuntuacion","modojuegotiempo","modojuegopuntos","modojuegorey","simple","completa","descripcionPuntosSimple","descripcionPuntosCompleta","rey","es","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07e3a5b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7c7a4747.png\";","\nclass Utils {\n    static millisToTime(millis) {\n        const minutes = Math.floor(millis / 60000),\n            hours = Math.floor(minutes / 60), \n            seconds = ((millis % 60000) / 1000).toFixed(0);\n\n        return { \n            h: hours,\n            m: minutes,\n            s: seconds,\n            mm: millis % 1000\n        }\n    }\n    \n    static timeToMillis(h,m,s) {\n        const date = new Date(),\n            todayRef = new Date();\n\n        todayRef.setHours(0);\n        todayRef.setMinutes(0);\n        todayRef.setSeconds(0);\n\n        date.setHours(h);\n        date.setMinutes(m);\n        date.setSeconds(s);\n\n        return date.getTime() - todayRef.getTime();\n    }\n    \n    static printTime(time) {\n        return `${String(time.h).padStart(2, '0')}:${String(time.m).padStart(2, '0')}:${String(time.s).padStart(2, '0')}:${String(time.mm).padStart(3, '0')}`\n    }\n\n    static randomizeArray(array) {\n        let currentIndex = array.length,  randomIndex;\n\n        while (currentIndex !== 0) {\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n      \n        return array;\n    }\n}\n\n\n\nexport default Utils;","import * as React from 'react';\nimport '../resources/css/Picker.css';\n\nfunction Picker({callback, minValue, maxValue, initialValue, value}) {\n    const elementRef = React.useRef();\n\n    !value && (value = initialValue);\n\n    function arrowClick(elementRef, operation) {\n        const value = Number(elementRef.current.innerText);\n        let result = value + operation;\n\n        if (result >=minValue && result <=maxValue) {\n            elementRef.current.innerText = result;\n            callback && callback(result);\n        } \n\n    }\n    return <div className=\"picker\">\n        <div className=\"picker--arrowUp\" onClick={(event)=> {arrowClick(elementRef,+1)}}></div>\n        <div className=\"picker--value\" ref={elementRef}>{value}</div>\n        <div className=\"picker--arrowDown\" onClick={(event)=> {arrowClick(elementRef,-1)}}></div>\n    </div>;\n}\n\nexport default Picker;","import * as React from 'react';\nimport Picker from './Picker';\nimport { useTranslation } from 'react-i18next';\n\nimport '../resources/css/PlayerItem.css';\n\nfunction PlayerItem({player, i, onRemovePlayer, onHandicapChange}) {\n    const { t } = useTranslation();\n    const contasinerRef = React.useRef();\n\n    function playerOnClick(event) {\n        contasinerRef.current.classList.toggle('closed');\n    }\n\n    function onPickerValueChange(value) {\n        onHandicapChange && onHandicapChange(value, i);\n    }\n\n    function avoidDefault(event) {\n        event.stopPropagation();\n    }\n\n    return <li ref={contasinerRef} key={i} className=\"closed importantNote rounded playerListItem\" value={player.name}>\n        <div className=\"playerBox\" onClick={playerOnClick}>\n            <img src={player.avatar} alt=\"avatar\"/>\n            {player.name} ({player.handicap})\n            <button className=\"buttonControlTextMinus\" id={i} onClick={onRemovePlayer}>-</button>\n        </div>\n        <div onClick={avoidDefault} className=\"pickerContainer timerContainer rounded rounded2 handicapBox\">\n            <div className=\"handicapLabel\">{t('description.handicap')}</div>\n            <Picker value={player.handicap}initialValue={player.handicap} callback={onPickerValueChange} minValue={-40} maxValue={40} />\n        </div>\n    </li>;\n}\n\nexport default PlayerItem;","import ReactGA from 'react-ga';\n\n\nfunction isLocalhost() {\n    return document.location.href.indexOf('localhost') >= 0;\n}\n\nclass Analytics {\n    static init(code) {\n        if (!isLocalhost()) {\n            ReactGA.initialize(code);\n        }\n    }\n\n    static pageview(path) {\n        if (!isLocalhost()) {\n            ReactGA.pageview(path);\n        }\n    }\n\n    static event(category, action, value) {\n        if (!isLocalhost()) {\n            ReactGA.event({ category, action, value });\n        }\n    }\n}\n\nexport default Analytics;","import * as React from 'react';\nimport Utils from '../Utils';\nimport PlayerItem from './PlayerItem';\nimport { useTranslation } from 'react-i18next';\nimport Analytics from '../Analytics';\n\nimport '../resources/css/PlayerController.css';\n\nconst AVATAR_API = \"https://eu.ui-avatars.com/api/?background=345B63&color=FFFFFF&name=\";\n\nfunction PlayerController({onPlayerNumerChange}) {\n    const [players, setPlayers] = useLocalStorageState('players');\n    const inputRef = React.useRef(null);\n    const inputId = Date.now();\n    const { t } = useTranslation();\n\n  React.useEffect(() => {\n    onPlayerNumerChange && onPlayerNumerChange(players);\n  }, [players]);\n\n  function addPlayer() {\n    const value = inputRef.current.value;\n    if (!value || value.trim().length===0) return;\n\n      const newPlayers = [...players];\n\n      newPlayers.push({\n          id: players.length,\n          name: inputRef.current.value,\n          avatar: `${AVATAR_API}${inputRef.current.value}`,\n          handicap: 0,\n          time: 0,\n          points: 0\n      });\n      Analytics.event('menu', 'addPlayer', inputRef.current.value);\n      inputRef.current.value = '';\n      setPlayers(newPlayers);\n      onPlayerNumerChange && onPlayerNumerChange(newPlayers);\n  }\n\n  function removePlayer(event) {\n    let newPlayers = [...players];\n\n    Analytics.event('menu', 'removePlayer', newPlayers[event.target.id].name);\n\n    delete newPlayers[event.target.id];\n    newPlayers = newPlayers.filter((a) => a)\n    setPlayers(newPlayers);\n    onPlayerNumerChange && onPlayerNumerChange(newPlayers);\n  }\n\n  function onHandicapChange(value, item) {\n    const newPlayers = [...players];\n\n    newPlayers[item].handicap = value;\n    setPlayers(newPlayers);\n    onPlayerNumerChange && onPlayerNumerChange(newPlayers);\n  }\n\n  function randomizePlayers() {\n    const newPlayers = Utils.randomizeArray(players);\n    \n    Analytics.event('menu', 'randomPlayerOrder', newPlayers.length);\n\n    setPlayers(newPlayers);\n    onPlayerNumerChange && onPlayerNumerChange(newPlayers);\n  }\n\n  const playersTxt = !players.length? t('description.nojugadores') : t('description.jugadores');\n\n  return <>\n    <div className=\"players rounded rounded1\">\n      <div className=\"headerText bold\">{playersTxt}</div>\n      <ul className=\"playersList\">\n          {players.map((player, i) => { \n              return <PlayerItem \n                player={player} \n                i={i} \n                onHandicapChange={onHandicapChange}\n                onRemovePlayer={removePlayer} />\n          })}\n      </ul>\n      {players.length>1 ? <button onClick={randomizePlayers}>{t('description.ordenaleatorio')}</button> : <></>}\n      <div className=\"headerText\">{t('description.nuevojugador')}</div>\n      <input id={inputId} ref={inputRef}></input>\n      <button className=\"buttonControlTextPlus\" onClick={addPlayer}>+</button>\n    </div></>;\n}\n\nfunction updatePlayerAfterVersionChange(players) {\n  if (players.length) {\n    if (typeof players[0].handicap === 'undefined') {\n      for (let i=0; i<players.length; i++) {\n        players[i].handicap = 0;\n      }\n    }\n  }\n\n  return players;\n}\n\nfunction useLocalStorageState(key, defaultValue = [], {\n    serialize = JSON.stringify,\n    deserialize = JSON.parse\n  } = {}) {\n  const [state, setState] = React.useState(\n    () => {\n      const valueLocalStorage = window.localStorage.getItem(key);\n\n      if (valueLocalStorage) {\n        return updatePlayerAfterVersionChange(deserialize(valueLocalStorage));\n    }\n\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n  });\n\n  const prevKeyRef = React.useRef(key);\n\n  React.useEffect(() => {\n    if (prevKeyRef !== key) {\n      window.localStorage.removeItem(prevKeyRef);\n    }\n    window.localStorage.setItem(key, serialize(state));\n  }, [key, serialize, state]);\n\n  return [state, setState];\n}\n\nexport default PlayerController;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport '../resources/css/GameTypeController.css';\n\nfunction GameTypeController({onGameTypeChange, onPointsTypeChange, selectedGameType=0, selectedPointsType=0}) {\n    const { t } = useTranslation();\n    const labelsGameType = [t('gametype.tiempo'), \n            t('gametype.puntos'),\n            t('gametype.rey')],\n        textsGameType = [<div>{t('gametype.modojuegotiempo')}</div>,\n                <div>{t('gametype.modojuegopuntos')}</div>,\n                <div>{t('gametype.modojuegorey')}</div>\n            ];\n\n        const labelsPointsType = [t('gametype.simple'), t('gametype.completa')],\n      textsPointsType = [<div>{t('gametype.descripcionPuntosSimple')}</div>,\n            <div>{t('gametype.descripcionPuntosCompleta')}</div>\n            ];\n\n    const [state, setState] = React.useState({\n        gameType: selectedGameType,\n        pointsType: selectedPointsType\n    });\n    \n    function onSelectGameTypeChange(event) {\n        const selected = event.target.selectedIndex;\n\n        onGameTypeChange && onGameTypeChange(selected);\n        setState({\n            gameType: selected,\n            pointsType: state.pointsType\n        });\n    }\n\n    function onSelectPointsTypeChange(event) {\n        const selected = event.target.selectedIndex;\n\n        onPointsTypeChange && onPointsTypeChange(selected);\n        setState({\n            gameType: state.gameType,\n            pointsType: selected\n        });\n    }\n\n    return <>\n        <div className=\"gameType rounded1 rounded\">\n            <div className=\"headerText bold\">{t('gametype.modojuego')}:</div>\n            <select defaultValue={state.gameType} onChange={onSelectGameTypeChange}>\n                <option value=\"0\">{labelsGameType[0]}</option>\n                <option value=\"1\">{labelsGameType[1]}</option>\n                <option value=\"2\">{labelsGameType[2]}</option>\n            </select>\n            <div className=\"gameSelectText\">{textsGameType[state.gameType]}</div>\n        </div>\n\n        <div className=\"gameType rounded1 rounded\">\n            <div className=\"headerText bold\">{t('gametype.tipopuntuacion')}:</div>\n            <select defaultValue={state.pointsType} onChange={onSelectPointsTypeChange}>\n                <option value=\"0\">{labelsPointsType[0]}</option>\n                <option value=\"1\">{labelsPointsType[1]}</option>\n            </select>\n            <div className=\"gameSelectText\">{textsPointsType[state.pointsType]}</div>\n        </div>\n    </>;\n}\n\nexport default GameTypeController;","export default __webpack_public_path__ + \"static/media/img00.612023be.png\";","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport headLogo from '../resources/img/img00.png';\n\nimport '../resources/css/MainPageTextContent.css';\n\nfunction MainPageTextContent() {\n    const { t } = useTranslation();\n\n    return <div className=\"aboutUsContent\">\n        <b>crawlear.com</b> {t('content.welcomeMessage')}\n\n        <figure>\n            <img className=\"contentImg\" alt=\"crawlers in action\" src={headLogo}></img>\n            <figcaption><a href=\"https://www.instagram.com/p/CT7FX_CMag7/\">img @takezorc</a></figcaption>\n        </figure>\n\n        <p><div className=\"inline bold\">{t('description.instrucciones')}</div>: {t('content.instrucciones')}</p>\n\n        <p>{t('content.instrucciones1')}</p>\n\n        </div>;\n}\n\nexport default MainPageTextContent;\n\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PlayerController from './PlayerController';\nimport GameTypeController from './GameTypeController';\nimport MainPageTextContent from './MainPageTextContent';\n\n\nfunction GameMenu({onPlayerNumerChange, onGameTypeChange, onPointsTypeChange, beginGame,\n    alertBoxRef, gameSelected, pointsTypeSelected}) {\n    const { t } = useTranslation();\n\n    return <>\n        <MainPageTextContent />\n        <PlayerController onPlayerNumerChange={(players)=>{\n            onPlayerNumerChange(players, alertBoxRef)}\n            }/>\n            <GameTypeController \n                selectedGameType={gameSelected}\n                selectedPointsType={pointsTypeSelected}\n                onGameTypeChange={(selectedIndex) => {\n                    onGameTypeChange(selectedIndex);\n                    }} \n                onPointsTypeChange={(selectedIndex) => {\n                    onPointsTypeChange(selectedIndex);\n            }}/>\n            <p>\n                <button className=\"importantNote\" onClick={() => {\n                    beginGame(alertBoxRef, t)\n                    }}>{t('description.empezar')}</button>\n            </p>\n        </>\n}\n\nexport default GameMenu;","import { findAllByTestId } from '@testing-library/dom';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Utils from '../Utils';\n\nfunction WinnerTable({mode, goToMenu, players, winnerId}) {\n    const { t } = useTranslation();\n    const finalWinner = findWinner();\n\n    function findWinner() {\n        let found = false, i=0;\n\n        while (!found) {\n            if (players[i].id === winnerId) found=true;\n            else i++;\n        }\n\n        return i;\n    }\n\n    return <><div className=\"winnerBox importantNote rounded\">\n        {t('description.ganador')}: <b>{players[finalWinner].name}<b /></b> <br />\n        {t('description.tiempo')}: {Utils.printTime(Utils.millisToTime(players[finalWinner].time))} <br />\n        {t('description.puntos')}: {players[finalWinner].points}  <br />\n        {t('description.handicap')}: {players[finalWinner].handicap}  <br />\n        <b>{`${t('description.total')}: ${players[finalWinner].points + players[finalWinner].handicap}`}</b>\n    </div>\n    <div className=\"pointsTable rounded rounded1\">\n        {players.map((player, i) => { \n            return <div className=\"winnerBox\" key={i} value={player.name}>\n                    <div className=\"headerPlayer rounded2 rounded bold\">\n                        {player.name}\n                    </div>\n                    {t('description.tiempo')}: {Utils.printTime(Utils.millisToTime(player.time))}<br />\n                    {t('description.puntos')}: {player.points} <br />\n                    {t('description.handicap')}: {player.handicap}  <br />\n                    <b>{`${t('description.total')}: ${player.points + player.handicap}`}</b>\n                </div>\n        })}\n    </div>\n    <button onClick={() => {\n        goToMenu()\n    }}>{t('description.atras')}</button>\n    </>;\n}\n\nexport default WinnerTable;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Utils from '../Utils';\n\nfunction TimerControl ({time, onPlayPauseChange}) {\n    const timeValue = Utils.millisToTime(time);\n    const { t } = useTranslation();\n\n    return <div className=\"timerContainer rounded rounded2\"> {t('description.tiempo')}:\n        <div className=\"timer\">{`${String(timeValue.h).padStart(2, '0')}:${String(timeValue.m).padStart(2, '0')}:${String(timeValue.s).padStart(2, '0')}:${String(timeValue.mm).padStart(3, '0')}`}</div>\n        <button className=\"timerPlayButton importantNote\" onClick={onPlayPauseChange}>play/pause</button>\n    </div>;\n}\n\nexport default TimerControl;\n","import * as React from 'react';\nimport '../resources/css/ControlText.css';\nimport Analytics from '../Analytics';\n\nfunction ControlText({\n        text,\n        step,\n        value,\n        onValueChange\n    }) {\n    const isNegativeControl = (step<0);\n    let boldValue = isNegativeControl ? value<0 : value>0;\n\n    function updateValue(step) {\n        if (!isNegativeControl && (value+step >= 0)) {\n            Analytics.event('menu','pointValueChanged',`${text} : ${step}`);\n            onValueChange(step);\n        } else if (isNegativeControl && (value+step <= 0)) {\n            Analytics.event('menu','pointValueChanged',`${text} : ${step}`);\n            onValueChange(step);\n        }\n    }\n\n    function getControlClass(initialClass) {\n        return boldValue ? `bold ${initialClass}` : `${initialClass}`;\n    }\n\n    return <div className=\"controlText\">\n        <button className='buttonControlTextPlus' onClick={() => {updateValue(step)}}>+</button>\n        <button className='buttonControlTextMinus' onClick={() => {updateValue(-step)}}>-</button>\n\n        <div className={getControlClass(\"controlTextText\")}>{text}: </div>\n        <div className={getControlClass(\"controlTextValue\")}>{value}</div>        \n    </div>;\n}\n\nexport default ControlText;","import * as React from 'react';\nimport ControlText from './ControlText';\nimport { useTranslation } from 'react-i18next';\n\nconst MODE_OFFICIAL = 1;\n\nfunction ControlTextArray({players, player, pointsMode, onValueChange}) {\n    const controlArray = [];\n    const { t } = useTranslation();\n\n    if (pointsMode === MODE_OFFICIAL) {\n        controlArray.push(<ControlText value={players[player].controlTextValues[0]} onValueChange={(value)=> {onValueChange(value, player, 0)}} initialValue={0} text={t('points.vuelco')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[1]} onValueChange={(value)=> {onValueChange(value, player, 1)}} initialValue={0} text={t('points.tocar')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[2]} onValueChange={(value)=> {onValueChange(value, player, 2)}} initialValue={0} text={t('points.puerta')} step={2} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[3]} onValueChange={(value)=> {onValueChange(value, player, 3)}} initialValue={0} text={t('points.saltoobstaculo')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[4]} onValueChange={(value)=> {onValueChange(value, player, 4)}} initialValue={0} text={t('points.reparacion')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[5]} onValueChange={(value)=> {onValueChange(value, player, 5)}} initialValue={0} text={t('points.winch')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[6]} onValueChange={(value)=> {onValueChange(value, player, 6)}} initialValue={0} text={t('points.puertaprogresion')} step={-1} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[7]} onValueChange={(value)=> {onValueChange(value, player, 7)}} initialValue={0} text={t('points.distancia')} step={1} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[8]} onValueChange={(value)=> {onValueChange(value, player, 8)}} initialValue={0} text={t('points.anclajeindebido')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[9]} onValueChange={(value)=> {onValueChange(value, player, 9)}} initialValue={0} text={t('points.juez')} step={1} />);\n    } else {\n        controlArray.push(<ControlText value={players[player].controlTextValues[0]} onValueChange={(value)=> {onValueChange(value, player, 0)}} initialValue={0} text={t('points.vuelco')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[1]} onValueChange={(value)=> {onValueChange(value, player, 1)}} initialValue={0} text={t('points.tocar')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[2]} onValueChange={(value)=> {onValueChange(value, player, 2)}} initialValue={0} text={t('points.puerta')} step={2} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[3]} onValueChange={(value)=> {onValueChange(value, player, 3)}} initialValue={0} text={t('points.saltoobstaculo')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[4]} onValueChange={(value)=> {onValueChange(value, player, 4)}} initialValue={0} text={t('points.reparacion')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[5]} onValueChange={(value)=> {onValueChange(value, player, 5)}} initialValue={0} text={t('points.winch')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[6]} onValueChange={(value)=> {onValueChange(value, player, 6)}} initialValue={0} text={t('points.puertaprogresion')} step={-1} />);\n    }\n    return controlArray;\n}\n\nexport default ControlTextArray;","import * as React from 'react';\nimport Utils from '../Utils';\nimport Picker from './Picker';\n\nimport '../resources/css/MaxTimePicker.css';\n\nconst HOURS = 0;\nconst MINUTES = 1;\nconst SECS = 2;\n\nfunction MaxTimePicker({onMaxTimeChange, hours, minutes, seconds}) {\n    const [time, setTime] = React.useState(0);\n    const [values, setValues] = React.useState([]);\n\n    function calculateTime(values) {\n        const hours = Number(values[HOURS]) || 0,\n            minutes = Number(values[MINUTES]) || 0,\n            seconds = Number(values[SECS]) || 0;\n\n        return Utils.timeToMillis(hours, minutes, seconds);\n    }\n\n    function arrowClick(result, elementRef) {\n        const newValues = [...values];\n\n        newValues[elementRef] = result;\n        result = calculateTime(newValues);            \n        setTime(result);\n        setValues(newValues);\n        onMaxTimeChange && onMaxTimeChange(result);\n    }\n\n    return <div className=\"pickerContainer timerContainer rounded rounded2\">\n            <Picker initialValue={0} minValue={0} maxValue={24} callback={(result) => {arrowClick(result, HOURS)}} />\n            <div className=\"maxTimePickerContainer--separator\">h</div>\n            <Picker initialValue={0} minValue={0} maxValue={60} callback={(result) => {arrowClick(result, MINUTES)}} />\n            <div className=\"maxTimePickerContainer--separator\">m</div>\n            <Picker initialValue={0} minValue={0} maxValue={60} callback={(result) => {arrowClick(result, SECS)}} />\n            <div className=\"maxTimePickerContainer--separator\">s</div>\n        </div>;\n}\n\nexport default MaxTimePicker;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TimerControl from '../TimerControl';\nimport ControlTextArray from '../ControlTextArray';\nimport MaxTimePicker from '../MaxTimePicker';\nimport Picker from '../Picker';\nimport Utils from '../../Utils';\nimport Analytics from '../../Analytics';\n\nimport '../../resources/css/games/TotalTimeGame.css'\n\nconst STATE_PLAY = 'play';\nconst STATE_PAUSE = 'pause';\nconst MODE_OFFICIAL = 1;\nconst STEP_MAXTIMESELECT = 0;\nconst STEP_PLAY = 1;\n\nlet tickTime = 0;\nlet timer = null;\n\nfunction TotalTimeGame({mode, onGameEnd, players}) {\n    const [state, setState] = React.useState(()=>{ \n        tickTime = 0;\n        return initControlTestValues({ maxPoints: 0, maxTime: 0, mode, players, step: STEP_MAXTIMESELECT }) \n    });\n    const { t } = useTranslation();\n    \n    React.useEffect(() => {\n        Analytics.pageview('/totaltimegame/');\n    },[]);\n\n    React.useEffect(()=> {\n        const newState = {\n            ...state,\n            timeStart: Date.now()\n        };\n\n        if (state.state === STATE_PLAY) {\n            timer && clearInterval(timer);\n            newState.millis = tickTime;\n            timer = setInterval(() => {timerCount(newState)}, 10);\n            setState(previousInputs => ({ ...previousInputs,...newState}));\n        } else {\n            const finalTime = tickTime + (Date.now() - newState.timeStart);\n            newState.millis = finalTime;\n            tickTime = finalTime;\n            timer && clearInterval(timer);\n            timer = null;\n            setState(previousInputs => ({ ...previousInputs,...newState}));\n        }\n    }, [state.state]);\n\n    function onChangeScore(value, player, control) {\n        const players = [...state.players];\n\n        if (!(state.maxPoints <= state.players[state.currentPlayer].points && state.maxPoints > 0) && \n        !(state.maxTime <= tickTime && state.maxTime > 0)) {\n            players[player].controlTextValues = [...players[player].controlTextValues];\n            players[player].controlTextValues[control] += value;\n            players[player].points += value;\n        \n            setState(previousInputs => ({ ...previousInputs,\n                players: players\n            }));\n        }\n    }\n\n    function timerCount(state) {\n        if (!(state.maxPoints <= state.players[state.currentPlayer].points && state.maxPoints > 0) && \n        !(state.maxTime <= tickTime && state.maxTime > 0)) {\n            tickTime += 10;  \n            setState(previousInputs => ({ ...previousInputs,\n                millis: tickTime\n            }));\n        }\n    };\n    \n    function changePlayPauseTimeControl() {\n        if(state.state === STATE_PAUSE) {\n            state.state = STATE_PLAY;\n            Analytics.event('play', 'timePlay', ''); \n    \n        } else {\n            state.state = STATE_PAUSE;\n            Analytics.event('play', 'timePause', '');    \n        }\n\n        setState(previousInputs=>({\n            ...previousInputs,\n            state: state.state\n        }));\n    }\n\n    function onMaxPointsChange(points) {\n        Analytics.event('menu', 'maxPointsSet', points);\n        setState(previousInputs=>({\n            ...previousInputs,\n            maxPoints: points\n        }));\n    }\n\n    function onMaxTimeChange(time) {\n        Analytics.event('menu', 'maxTimeSet', time);\n        setState(previousInputs=>({\n            ...previousInputs,\n            maxTime: time\n        }));\n    }\n\n    function onReset() {\n        let newState = {\n            ...state, \n        };\n        window.scrollTo(0,0);\n\n        Analytics.event('play', 'reset', newState.players[state.currentPlayer].name);\n\n        tickTime = 0;\n        newState = initControlTestValues(newState);\n        newState.players[state.currentPlayer].time = 0;\n        newState.players[state.currentPlayer].points = 0;  \n        newState.currentPlayer = state.currentPlayer;\n        newState.state = STATE_PAUSE;\n        setState(previousInputs => ({ ...previousInputs,...newState}));\n    }\n\n    function onEndPlayer() {\n        const newState = initControlTestValues(state);\n            \n        window.scrollTo(0,0);\n        newState.state = STATE_PAUSE;\n\n        if ((state.maxPoints <= state.players[state.currentPlayer].points && state.maxPoints > 0) || \n            (state.maxTime <= tickTime && state.maxTime > 0)) {\n            newState.players[state.currentPlayer].time = (state.maxTime > 0 ? state.maxTime : tickTime);\n            newState.players[state.currentPlayer].points = (state.maxPoints > 0 ? state.maxPoints : newState.players[state.currentPlayer].points);\n        } else {\n            newState.players[state.currentPlayer].time = tickTime;\n        }\n\n        Analytics.event('play', 'endPlayer', newState.players[newState.currentPlayer].name);\n\n        if (state.currentPlayer+1 < state.players.length) {\n            tickTime = 0;\n            newState.millis = 0;\n            newState.currentPlayer = state.currentPlayer+1;\n            setState(previousInputs => ({ \n                ...previousInputs,\n                ...newState}));\n        } else {\n            onGameEnd && onGameEnd(getWinner(state));\n        }\n    }\n\n    function onCompleteGameMaxtimeSelected() {\n        setState(previousInputs => ({ \n            ...previousInputs,\n            step: STEP_PLAY}));\n\n    }\n\n    if (state.players.length>0) {\n        const currentPlayer = state.players[state.currentPlayer];\n        let controlTextArray = [],\n            maxTimeControl,\n            maxTimePicker = state.mode === MODE_OFFICIAL ? \n                <MaxTimePicker onMaxTimeChange={onMaxTimeChange}\n                    hours={0}\n                    minutes={0}\n                    seconds={0} /> : <></>;\n\n        controlTextArray = ControlTextArray({\n            players: state.players,\n            player: state.currentPlayer,\n            pointsMode: state.mode,\n            onValueChange: (value, player, control)=> {\n                onChangeScore(value, player, control)\n            }});\n\n        if (state.mode === MODE_OFFICIAL && state.step === STEP_MAXTIMESELECT) {\n            return <div>\n                    <p>{t('content.maxTimeText1')}</p>\n                    {maxTimePicker}\n                    <p>{t('content.maxTimeText2')}</p>\n                    <div className=\"pickerContainer timerContainer rounded rounded2\">\n                        <Picker minValue={0} maxValue={40} callback={(result) => {onMaxPointsChange(result)}} initialValue={0} />\n                    </div>\n                    <button onClick={onCompleteGameMaxtimeSelected} className=\"rounded rounded2 importantNote\">{t('description.continuar')}</button>\n                </div>;\n        } else {\n            if (state.mode === MODE_OFFICIAL) {\n                let fiasco;\n\n                if ((state.maxPoints <= state.players[state.currentPlayer].points && state.maxPoints > 0) || \n                    (state.maxTime <= tickTime && state.maxTime > 0)) {\n                    Analytics.event('play', 'fiasco', state.players[state.currentPlayer].name); \n                    fiasco = <div className=\"rounded importantNote\">FiASCO!</div>;\n                }\n\n                maxTimeControl = <div className=\"fiascoBox rounded rounded2 bold\">\n                    {fiasco}\n                    {t('description.tiempomaximo')}: {Utils.printTime(Utils.millisToTime(state.maxTime))} <br />\n                    {t('description.puntosmaximo')}: {state.maxPoints}\n                </div>\n            }\n\n            return <div className=\"gameContainer\">\n                <div className=\"playersList\">\n                    <div className=\"playerListItem importantNote rounded\">\n                        <img src={currentPlayer.avatar} alt=\"avatar\"/>\n                        {currentPlayer.name}\n                    </div>\n                </div>\n                {maxTimeControl}\n                <div className=\"totalTimeContainer rounded\">\n                    {`${t('description.handicap')} : ${currentPlayer.handicap}`}<br />\n                    {t('description.puntos')}: { currentPlayer.points}<br />\n                    ---<br />\n                    <div className=\"inline bold\">{t('description.total')} :</div> {currentPlayer.points + currentPlayer.handicap}\n                </div>\n                <TimerControl \n                    state={state.state}\n                    time={state.millis} \n                    onPlayPauseChange={changePlayPauseTimeControl}\n                />\n                <div className=\"controlTextContainer rounded rounded1\">\n                    {controlTextArray}\n                </div>\n                <button onClick={onReset} className=\"resetButton\">{t('description.reset')}</button>\n                <button className=\"importantNote\" onClick={()=>{\n                    onEndPlayer(onGameEnd)\n                    }}>{t('description.finjugador')} ({currentPlayer.name})</button><p />\n            </div>\n        }\n    }\n}\n\nfunction initControlTestValues({maxPoints, maxTime, mode, players, step}) {\n    const newState = {\n        millis: 0,\n        timeStart: 0,\n        players: [...players],\n        currentPlayer: 0,\n        mode: mode,\n        maxTime: maxTime,\n        maxPoints: maxPoints,\n        state: STATE_PAUSE,\n        step: step\n    }\n\n    for(let i=0; i<newState.players.length;i++) {\n        newState.players[i].controlTextValues = mode === MODE_OFFICIAL ? new Array(10) : new Array(7);\n\n        for(let j=0; j<newState.players[i].controlTextValues.length; j++) {\n            newState.players[i].controlTextValues[j] = 0;\n        }\n    }\n\n\n    return newState;\n}\n\nfunction getWinner(state) {\n    const players = [...state.players];\n\n    players.sort(function(a, b) {\n        const bypoints = (a.points + a.handicap) - (b.points + b.handicap);\n\n        if (bypoints === 0) {\n            return a.time - b.time;\n        }\n\n        return bypoints;\n      });\n\n    return players[0].id;\n}\n\nexport default TotalTimeGame;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ControlTextArray from '../ControlTextArray';\nimport ReactGA from 'react-ga';\n\nimport '../../resources/css/games/KingGame.css';\n\nconst MODE_OFFICIAL = 1;\n\nfunction KingGame({mode, onGameEnd, players}) {\n    const [state, setState] = React.useState(()=>{ return initControlTestValues({ mode, players }) });\n    const { t } = useTranslation();\n\n    function changePointsOnScoreChange(points, player, control) {\n        const players = [...state.players]\n        const order = getPlayersOrder(state.order.findIndex(item => item.id===state.players[player].id), state.order);\n\n        players[player].points += points;\n        players[player].controlTextValues = [...players[player].controlTextValues];\n        players[player].controlTextValues[control] += points;\n                \n        setState(previousInputs => ({ ...previousInputs,\n            players: players,\n            order: order\n        }));\n    }\n\n    function gameEnd() {\n        let winner = 0;\n\n        for(let i=0; i<state.players.length;i++) {\n            if (state.players[i].points + state.players[i].handicap < state.players[winner].points + state.players[winner].handicap) {\n                winner = i;\n            }\n        }\n        onGameEnd(winner);\n    }\n\n    React.useEffect(() => {\n        ReactGA.pageview('/kinggame/');\n    },[]);\n\n    let result = [];\n\n    result.push(<div>{t('description.ordenruta')}:</div>);\n    for(let i=0;i<state.players.length;i++) {\n        result.push(<>\n            <div>\n                <div className=\"controlTextContainerQueue rounded bold\">\n                    {state.order[i].name}: {state.order[i].points + state.order[i].handicap} ptos\n                </div>\n            </div>\n        </>);\n    }\n\n    result.push(<p>{t('description.puntos').toUpperCase()}:</p>);\n    for(let i=0;i<state.players.length;i++) {\n        result.push(<>\n            <div className=\"playerInfo\">\n                <div className=\"headerPlayer importantNote rounded2 rounded\">\n                    <div className=\"bold\">{state.players[i].name}</div>\n                    {`${t('description.handicap')} : ${state.players[i].handicap}`}<br />\n                    {t('description.total')}: { state.players[i].points + state.players[i].handicap}\n                </div>\n                <div className=\"controlTextContainer rounded rounded1\">\n                    {ControlTextArray({\n                        players: state.players, \n                        player: i, \n                        pointsMode: state.mode, \n                        onValueChange: (value, player, control)=> {changePointsOnScoreChange(value, player, control)}})}\n                </div>\n            </div>\n        </>);\n    }\n\n    result.push(<button className=\"importantNote\" onClick={gameEnd}>{t('description.fin')}</button>);\n\n    return result;\n}\n\nfunction initControlTestValues({mode, players}) {\n    const newState = {\n        players: [...players],\n        mode: mode,\n        order: [...players]\n    }\n\n    for(let i=0; i<newState.players.length;i++) {\n        newState.players[i].controlTextValues = mode === MODE_OFFICIAL ? new Array(10) : new Array(7);\n\n        for(let j=0; j<newState.players[i].controlTextValues.length; j++) {\n            newState.players[i].controlTextValues[j] = 0;\n        }\n    }\n\n    return newState;\n}\n\nfunction getPlayersOrder(index, array) {\n    const newArray = [...array];\n\n    newArray.push(newArray.splice(index, 1)[0]);\n\n    return newArray;\n}\n\nexport default KingGame;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ControlTextArray from '../ControlTextArray';\nimport Analytics from '../../Analytics';\n\nconst MODE_OFFICIAL = 1;\nconst MAX_POINTS = 10000000;\n\nfunction PointsGame({mode, onGameEnd, players}) {\n    const [state, setState] = React.useState(()=>{ return initControlTestValues({ mode, players }) });\n    const { t } = useTranslation();\n\n    function changePointsOnScoreChange(value, player, control) {\n        players[player].controlTextValues = [...players[player].controlTextValues];\n        players[player].controlTextValues[control] += value;\n        players[player].points += value;\n    \n        setState(previousInputs => ({ ...previousInputs,\n            players: players\n        }));\n    }\n\n    function onEndPlayer() {\n        Analytics.event('play', 'endPlayer', state.players[state.currentPlayer].name);\n\n        if (state.currentPlayer+1 < state.players.length) {\n            setState((state, props)=> {\n                return {\n                    ...initControlTestValues(state),\n                    points: 0,\n                    currentPlayer: state.currentPlayer+1\n                };\n            });\n        } else {\n            onGameEnd && onGameEnd(getWinner(state));\n        }\n    }\n\n    function onReset() {\n        window.scrollTo(0,0);\n        state.players[state.currentPlayer].points = 0;\n        Analytics.event('play', 'reset', state.players[state.currentPlayer].name);\n        setState((state, props)=> {\n            return {\n                ...initControlTestValues(state),\n                players: [...state.players],\n                currentPlayer: state.currentPlayer\n            };\n        });\n    }\n\n    React.useEffect(() => {\n        Analytics.pageview('/pointsgame/');\n    },[]);\n\n    if (state.players.length>0) {\n        const currentPlayer = state.players[state.currentPlayer];\n        let controlTextArray = [];\n\n        controlTextArray = ControlTextArray({\n            players: state.players, \n            player: state.currentPlayer, \n            pointsMode: state.mode, \n            onValueChange: (value, player, control)=> {changePointsOnScoreChange(value, player, control)}});\n\n        return <div className=\"gameContainer\">\n\n            <div className=\"playerInfo\">\n                <div className=\"headerPlayer importantNote rounded2 rounded\">\n                    <div className=\"bold\">{currentPlayer.name}</div>\n                    {`${t('description.handicap')} : ${currentPlayer.handicap}`}<br />\n                    {`${t('description.total')} ${t('description.puntos')}`}: {currentPlayer.points + currentPlayer.handicap}\n                </div>\n            </div>\n\n            <div className=\"controlTextContainer rounded rounded1\">\n                {controlTextArray}\n            </div>\n            <button onClick={onReset}>{t('description.reset')}</button>\n            <button className=\"importantNote\" onClick={onEndPlayer}>{t('description.finjugador')} ({currentPlayer.name})</button><p />\n        </div>\n    }\n}\n\nfunction initControlTestValues({mode, players}) {\n    const newState = {\n        currentPlayer: 0,\n        players: [...players],\n        mode: mode,\n        points: 0\n    };\n\n    for(let i=0; i<newState.players.length;i++) {\n        newState.players[i].controlTextValues = mode === MODE_OFFICIAL ? new Array(10) : new Array(7);\n\n        for(let j=0; j<newState.players[i].controlTextValues.length; j++) {\n            newState.players[i].controlTextValues[j] = 0;\n        }\n    }\n\n    return newState;\n}\n\nfunction getWinner(state) {\n    let winner = -1, minPoints=MAX_POINTS;\n\n    for (let i=0;i<state.players.length;i++) {\n        const points = state.players[i].points + state.players[i].handicap;\n\n        if (points < minPoints) {\n            minPoints = points;\n            winner = i;\n        }\n    }\n\n    return winner;\n}\n\nexport default PointsGame;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TotalTimeGame from './games/TotalTimeGame';\nimport KingGame from './games/KingGame';\nimport PointsGame from './games/PointsGame';\n\nconst GAME_TYPE_TIME = 0;\nconst GAME_TYPE_POINTS = 1;\nconst GAME_TYPE_KING = 2;\n\nfunction GameTypePlayer({onGameEnd, goToMenu, gameSelected, players, pointsTypeSelected}) {\n    const { t } = useTranslation();\n    const elementsToRender = [];\n\n    if (gameSelected === GAME_TYPE_TIME) {\n        elementsToRender.push(<TotalTimeGame \n            mode={pointsTypeSelected}\n            onGameEnd={(winnerPlayer)=> {\n                onGameEnd(winnerPlayer)\n            }}\n            players={players}\n        />);\n    } else if (gameSelected === GAME_TYPE_KING) {\n        elementsToRender.push(<KingGame \n            onGameEnd={(winnerPlayer)=> {\n                onGameEnd(winnerPlayer)\n            }}\n            players={players} \n            mode={pointsTypeSelected}\n            />);\n    } else if (gameSelected === GAME_TYPE_POINTS) {\n        elementsToRender.push(<PointsGame \n            mode={pointsTypeSelected}\n            onGameEnd={(winnerPlayer)=> {\n                onGameEnd(winnerPlayer)\n            }}\n            players={players}\n        />);\n    }\n\n    elementsToRender.push(<button onClick={() => { goToMenu() }}>{t('description.atras')}</button>);\n\n    return elementsToRender;\n}\n\nexport default GameTypePlayer;","import * as React from 'react';\nimport GameMenu from './GameMenu';\nimport WinnerTable from './WinnerTable';\nimport GameTypePlayer from './GameTypePlayer';\nimport Analytics from '../Analytics';\n\nimport '../resources/css/GameController.css';\n\nconst GAME_STATUS_MENU = 0;\nconst GAME_STATUS_PLAY = 1;\nconst GAME_STATUS_FINISH = 2;\n\nconst GAME_TYPE_TIME = 0;\nconst GAME_MODE_SIMPLE = 0;\n\nfunction GameController(props) {\n    const alertBoxRef = React.useRef();\n    const elementsToRender = [];\n\n    const [state, setState] = React.useState({\n        players: [], \n        winner: 0,\n        gameStatus: GAME_STATUS_MENU,\n        gameSelected: GAME_TYPE_TIME,\n        pointsTypeSelected: GAME_MODE_SIMPLE\n    });\n\n    function onPointsTypeChange(selectedIndex) {\n        Analytics.event('menu', 'pointsModeChange',selectedIndex);\n        setState({\n            players: state.players, \n            winner: state.winner,\n            gameStatus: state.gameStatus,\n            gameSelected: state.gameSelected,\n            pointsTypeSelected: selectedIndex\n        });\n    }\n    \n    function onGameTypeChange(selectedIndex) {\n        Analytics.event('menu', 'playModeChange', selectedIndex);\n        setState({\n            players: state.players, \n            winner: state.winner,\n            gameStatus: state.gameStatus,\n            gameSelected: selectedIndex,\n            pointsTypeSelected: state.pointsTypeSelected\n        });\n    }\n    \n    function onGameEnd(winnerPlayer) {\n        window.scrollTo(0,0);\n        Analytics.event('menu','winner',winnerPlayer);\n        setState({\n            players: state.players, \n            winner: winnerPlayer,\n            gameStatus: GAME_STATUS_FINISH,\n            gameSelected: state.gameSelected,\n            pointsTypeSelected: state.pointsTypeSelected\n        });\n    }\n    \n    function onPlayerNumerChange(players, alertBoxRef) {\n        let action = 'addPlayer';\n\n        cleanAlertBox(alertBoxRef);\n        if (state.players.length > players.length) {\n            action = 'removePlayer';\n        }\n        Analytics.event('menu', action, players.length);\n\n        setState({\n            players: players, \n            winner: state.winner,\n            gameStatus: state.gameStatus,\n            gameSelected: state.gameSelected,\n            pointsTypeSelected: state.pointsTypeSelected\n        });\n    }\n    \n    function beginGame(alertBoxRef, t) {\n        window.scrollTo(0,0);\n        if (state.players.length>0) {\n            const newState = {...state};\n    \n            Analytics.event('menu', 'beginGame', state.players.length);\n            setState({\n                players: newState.players,\n                winner: newState.winner, \n                gameStatus: GAME_STATUS_PLAY,\n                gameSelected: newState.gameSelected,\n                pointsTypeSelected: newState.pointsTypeSelected\n            });\n        } else {\n            Analytics.event('menu', 'beginGame', 0);\n            showAlertBox(t('error.nojugadores'), alertBoxRef);\n        }\n    }\n\n    function goToMenu() {\n        window.scrollTo(0,0);\n        setState({\n            players: state.players, \n            winner: state.winner,\n            gameStatus: GAME_STATUS_MENU,\n            gameSelected: state.gameSelected,\n            pointsTypeSelected: state.pointsTypeSelected\n        });\n    }\n\n    React.useEffect(() => {\n        if(state.gameStatus === GAME_STATUS_MENU) {\n            Analytics.pageview('/menu/');\n        }\n    },[state.gameStatus]);\n\n    elementsToRender.push(<div ref={alertBoxRef} className=\"hideAlert alertBox\"></div>);\n\n    switch(state.gameStatus) {\n        case GAME_STATUS_MENU:\n            elementsToRender.push(<GameMenu onPlayerNumerChange={onPlayerNumerChange}  \n                onGameTypeChange={onGameTypeChange}\n                onPointsTypeChange={onPointsTypeChange}\n                beginGame={beginGame}\n                alertBoxRef={alertBoxRef}\n                gameSelected={state.gameSelected}\n                pointsTypeSelected={state.pointsTypeSelected}\n            />);\n                break;\n        case GAME_STATUS_PLAY:\n            elementsToRender.push(<GameTypePlayer \n                goToMenu={goToMenu}\n                onGameEnd={onGameEnd} \n                gameSelected={state.gameSelected}\n                players={state.players} \n                pointsTypeSelected={state.pointsTypeSelected} />);\n            break;\n        default:\n            elementsToRender.push(<WinnerTable \n                mode={state.pointsTypeSelected}\n                players={state.players}\n                winnerId={state.winner}\n                goToMenu={goToMenu} />);\n    }\n\n    return elementsToRender;\n}\n\nfunction cleanAlertBox(alertBoxRef) {\n    alertBoxRef.current.classList.add('hideAlert');;\n    alertBoxRef.current.innerHTML = '';\n}\n\nfunction showAlertBox(message, alertBoxRef) {\n    alertBoxRef.current.classList.remove('hideAlert');;\n    alertBoxRef.current.innerHTML = message;\n}\n\nexport default GameController;","export default __webpack_public_path__ + \"static/media/img01.de805005.png\";","export default __webpack_public_path__ + \"static/media/img02.1d4f3699.png\";","export default __webpack_public_path__ + \"static/media/img03.f66fba6c.png\";","import * as React from 'react';\nimport Analytics from '../Analytics';\nimport { useTranslation } from 'react-i18next';\nimport img01 from '../resources/img/img01.png';\nimport img02 from '../resources/img/img02.png';\nimport img03 from '../resources/img/img03.png';\n\nimport '../resources/css/AboutUs.css';\n\nfunction AboutUs({onLinkClicked}) {\n    const { t } = useTranslation();\n\n    React.useEffect(() => {\n        Analytics.pageview('/aboutus/');\n    },[]);\n\n    return <div className=\"aboutUsContent\">\n        <b>crawlear.com</b> {t('content.aboutus')}\n        <img src={img01} alt=\"crawler en accion\" />\n        <p>{t('content.aboutus1')}</p>\n        <img src={img02} alt=\"crawler en accion2\" />\n        <p>{t('content.aboutus2')}</p>\n        <img src={img03} alt=\"crawler en accion3\" />\n        <p><a onClick={onLinkClicked} href=\"#void\">{'>'} Volver</a></p>\n    </div>;\n}\n\nexport default AboutUs;","import * as React from 'react';\n\nfunction Footer() {\n\n    return <div className=\"Footer\">\n        ©crawlear.com 2021\n    </div>;\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/1 24 REGLAMENTO CRAWLER DEPORTIVO Y TECNICO 2021 V1 BORRADOR 19-1-2021.70aee093.pdf\";","import * as React from 'react';\nimport '../resources/css/Menu.css';\n\nimport pdf from '../resources/1 24 REGLAMENTO CRAWLER DEPORTIVO Y TECNICO 2021 V1 BORRADOR 19-1-2021.pdf'\n\nfunction Menu({onLinkClicked}) {\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    function onMenuClick() {\n        setIsOpen(!isOpen);\n    }\n\n    function clickAction(event) {\n        onLinkClicked(event.target.dataset.link);\n    }\n\n    if (isOpen) {\n        return <div className=\"rounded menuContainer open\" onClick={onMenuClick}>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"linksContainer\">\n                <ul>\n                    <li><a href=\"#void\" data-link=\"aboutus\" onClick={clickAction}>About us</a></li>\n                    <li><a href=\"/privacy.html\">Privacy Policy</a></li>\n                    <li>-</li>\n                    <li><a href=\"https://www.aecar.org/modalidades.php?tipo=crawler\">AECAR Crawler</a></li>\n                    <li><a href={pdf} data-link=\"aboutus\" onClick={clickAction}>1/24 Reglamento Deportivo oficial 2021</a></li>\n                </ul>\n            </div>\n        </div>\n    } else {\n        return <div className=\"rounded menuContainer closed\" onClick={onMenuClick}>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n        </div>;\n    }\n\n}\n\nexport default Menu;","\nimport './resources/css/Base.css';\nimport './resources/css/App.css';\nimport './resources/css/Components.css';\nimport './resources/css/Footer.css';\n\nimport logo from './resources/img/logo.png';\nimport GameController from './components/GameController';\nimport AboutUs from './components/AboutUs';\nimport Footer from './components/Footer';\nimport Menu from './components/Menu';\nimport React from 'react';\nimport Analytics from './Analytics';\n\nconst STATE_GAME = 0;\nconst STATE_ABOUTUS = 1;\n\nfunction App() {\n  const [state, setState] = React.useState(STATE_GAME);\n  let stateComponent;\n\n  React.useEffect(() => {\n    Analytics.init('UA-156750890-2');\n  }, [])\n\n  function onLinkClickedMenu(link) {\n    setState(STATE_ABOUTUS);\n  }\n\n  function onLinkClickedVolver()\n  {\n    setState(STATE_GAME);\n  }\n\n  if(state === STATE_GAME) {\n    stateComponent = <GameController />;\n  } else if(state === STATE_ABOUTUS) {\n    stateComponent = <AboutUs onLinkClicked={onLinkClickedVolver} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Menu onLinkClicked={onLinkClickedMenu}></Menu>\n        <img src={logo} alt=\"logo\" />\n      </header>\n\n      <div className=\"AppMainContainer\">\n        {stateComponent}\n      </div>\n\n      <div className=\"adsContainer\"></div>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    debug: true,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false\n    },\n    resources: {\n      en: {\n        translation: {\n          content: {\n            aboutus: 'arises from the hobby of a group of friends after discovering the world of the rc crawler, entering the 1/24 scale.',\n            aboutus1: 'After going out on the field a couple of times, we realized that it would be a good idea to have a scoreboard for the matches, where we can manage the points in the different game modes that we practice.',\n            aboutus2: 'If you have any questions, comments or suggestions, do not hesitate to contact us at crawlear.com@gmail.com',\n            aboutus3: 'Barcelona (Spain) 2021',\n            welcomeMessage: 'is a score board for your crawler pachangas (spanish name for a \"friends organized game\").',\n            instrucciones: 'First add the players, select the game mode, the points type and push the Begin button.',\n            instrucciones1: 'By clicking on the player you can define a positive or negative handicap for the user. At the end of the game, the handicap will be added to the user\\'s points to calculate the total points at the end of the game.',\n            maxTimeText1: 'Select the maximum time (0 if you do not want to apply maximum time):',\n            maxTimeText2: 'Select the maximum points (0 if you do not want to apply a maximum score):'\n          },\n          error: {\n              nojugadores: 'First add the players and select the type of game and score'\n          },\n          description: {\n            nojugadores: 'No players',\n            jugadores: 'Players',\n            nuevojugador: 'New player',\n            ordenaleatorio: 'Random order',\n            empezar: 'Begin',\n            atras: 'Back',\n            ganador: 'WINNER',\n            tiempo: 'TIME',\n            puntos: 'POINTS',\n            finjugador: 'end player',\n            total: 'TOTAL',\n            ordenruta: 'Rute ORDER',\n            fin: 'End',\n            reset: 'Reset',\n            continuar: 'Continue',\n            tiempomaximo: 'MAX TIME',\n            zonas: 'Zones',\n            puntosmaximo: 'MAX POINTS',\n            handicap: 'handicap',\n            instrucciones: 'Instructions'\n          },\n          points: {\n            vuelco: 'overturn',\n            tocar: 'touch',\n            puerta: 'gate',\n            saltoobstaculo: 'obstacle jump',\n            reparacion: 'repair',\n            winch: 'winch',\n            puertaprogresion: 'progression gate',\n            distancia: 'distance',\n            anclajeindebido: 'improper anchor',\n            juez: 'judge'\n          },\n          gametype: {\n            modojuego: 'Game mode',\n            tipopuntuacion: 'Points type',\n            modojuegotiempo: 'A section is chosen and all participants will run it one by one and in the pre-established order. You run to points with time and maximum score and the possibility of making a fiasco. The winner will be the player with less points with a time tiebreaker.',\n            modojuegopuntos: 'A section is chosen and all participants will run it one by one and in the pre-established order. Points are run and the winner will be the player with the lowest score.',\n            modojuegorey: 'There is no pre-established route and the first participant, the King, chooses the path when playing. All participants run at the same time in line following the same route as the King. If a player scores he goes to the end of the queue. The winner will be the player with the lowest score.',\n            simple: 'Simple',\n            completa: 'Complete',\n            descripcionPuntosSimple: 'Score: Winch, touch, obstacle jump, repair, door, overturn and progression door. There is no time or maximum points.',\n            descripcionPuntosCompleta: 'Score: Winch, touch, distance, obstacle jump, repair, door, overturn, progression door, improper anchor and judge. Optional time and maximum points.',\n            tiempo: 'Time',\n            puntos: 'Points',\n            rey: 'The King'\n          }\n        }\n      },\n      es: {\n        translation: {\n          content: {\n            aboutus: 'surge a partir de la afición de un grupo de amigos después de descubrir el mundo del crawler rc, entrando por la escala 1/24.',\n            aboutus1: 'Después de salir al terreno de juego un par de veces nos dimos cuenta que sería una buena idea tener un marcador para las partidas, donde poder gestionar los puntos en los diferentes modos de juegos que practicamos.',\n            aboutus2: 'Si tienes alguna duda, comentario o sugerencia no dudes en contactar con nosotros en crawlear.com@gmail.com',\n            aboutus3: 'takezoRc, Barcelona 2021',\n            welcomeMessage: 'es un tablero de puntuación para tus pachangas de crawler con los amigos.',\n            instrucciones: 'Primero añade los jugadores, selecciona el modo de juego, el tipo de puntuación y pulsa Empezar.',\n            instrucciones1: 'Pulsando en el jugador podrás definir un handicap positivo o negativo para el usuario. A final de partida el handicap se sumará a los puntos del usuario para calcular el total de puntos al final de la partida.',\n            maxTimeText1: 'Selecciona el tiempo máximo (0 si no quieres aplicar tiempo máximo):',\n            maxTimeText2: 'Selecciona el máximo de puntos (0 si no quieres aplicar puntuación máxima):'\n          },\n          error: {\n              nojugadores: 'Primero añade los jugadores y selecciona el tipo de juego y puntuación'\n          },\n          description: {\n              nojugadores: 'No hay jugadores',\n              jugadores: 'Jugadores',\n              nuevojugador: 'Nuevo jugador',\n              ordenaleatorio: 'Orden aleatorio',\n              empezar: 'Empezar',\n              atras: 'Atrás',\n              ganador: 'GANADOR',\n              tiempo: 'TIEMPO',\n              puntos: 'PUNTOS',\n              finjugador: 'fin jugador',\n              total: 'TOTAL',\n              ordenruta: 'ORDEN de Ruta',\n              fin: 'Fin',\n              reset: 'Reiniciar',\n              continuar: 'Continuar',\n              tiempomaximo: 'TIEMPO MAX',\n              zonas: 'Zonas',\n              puntosmaximo: 'MAX PUNTOS',\n              handicap: 'handicap',\n              instrucciones: 'Instrucciones'\n          },\n          points: {\n            vuelco: 'vuelco',\n            tocar: 'tocar',\n            puerta: 'puerta',\n            saltoobstaculo: 'salto obstaculo',\n            reparacion: 'reparacion',\n            winch: 'winch',\n            puertaprogresion: 'puerta progresion',\n            distancia: 'distancia',\n            anclajeindebido: 'anclaje indebido',\n            juez: 'juez'\n          },\n          gametype: {\n            modojuego: 'Modo de juego',\n            tipopuntuacion: 'Tipo de puntuacion',\n            modojuegotiempo: 'Se escoge un tramo y todos los participantes lo correrán uno por uno y en el orden preestablecido. Se corre a puntos con tiempo y puntuación máxima y la posibilidad de hacer fiasco. El ganador será el jugador con menor puntos con desempate de tiempo.',\n            modojuegopuntos: 'Se escoge un tramo y todos los participantes lo correrán uno por uno y en el orden preestablecido. Se corre a puntos y el ganador será el jugador con menor puntuación.',\n            modojuegorey: 'No hay ruta preestablecida y el primer participante, el Rey, escoge el camino al jugar. Todos los participantes corren a la vez en línea siguiendo la misma ruta que el Rey. Si un jugador puntúa pasa al final de la cola. El ganador será el jugador con menor puntuación.',\n            simple: 'Simple',\n            completa: 'Completa',\n            descripcionPuntosSimple: 'Puntuación: Winch, tocar, salto obstaculo, reparacion, puerta, vuelco y puerta progresion. No hay tiempo ni puntos máximos.',\n            descripcionPuntosCompleta: 'Puntuación: Winch, tocar, distancia, salto obstaculo, reparacion, puerta, vuelco, puerta progresion, anclaje indebido y juez. Tiempo y puntos máximos opcionales.',\n            tiempo: 'Tiempo',\n            puntos: 'Puntos',\n            rey: 'El Rey'\n          }\n        }\n      }\n    }\n  });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport i18n from './language/i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}