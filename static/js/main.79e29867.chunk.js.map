{"version":3,"sources":["resources/img/logo.png","components/ControlText.js","Utils.js","components/PlayerController.js","components/GameTypeController.js","components/TimerControl.js","components/ControlTextArray.js","components/TotalTimeGame.js","components/KingGame.js","components/PointsGame.js","resources/img/img00.png","components/MainPageTextContent.js","components/GameController.js","components/AboutUs.js","components/Footer.js","components/Menu.js","App.js","reportWebVitals.js","language/i18n.js","index.js"],"names":["ControlText","text","step","value","onValueChange","isNegativeControl","boldValue","updateValue","getControlClass","initialClass","className","onClick","Utils","secondsToTime","millis","minutes","Math","floor","h","m","s","toFixed","mm","printTime","time","String","padStart","randomizeArray","array","randomIndex","currentIndex","length","random","getControlTextArray","mode","controlTextValues","callback","i","t","controlTextArray","push","initialValue","PlayerController","onPlayerNumerChange","key","defaultValue","serialize","JSON","stringify","deserialize","parse","React","valueLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","removeItem","setItem","useLocalStorageState","players","setPlayers","inputRef","inputId","Date","now","useTranslation","removePlayer","event","newPlayers","target","id","filter","a","i18n","playersTxt","map","player","name","src","avatar","alt","ref","current","trim","points","document","getElementById","GameTypeController","onGameTypeChange","onPointsTypeChange","selectedGameType","selectedPointsType","labelsGameType","textsGameType","labelsPointsType","textsPointsType","gameType","pointsType","onChange","selected","selectedIndex","TimerControl","onPlayPauseChange","timeValue","ControlTextArray","pointsMode","controlArray","STATE_PLAY","STATE_PAUSE","tickTime","timer","initControlTestValues","newState","timeModifier","timeStart","currentPlayer","Array","j","TotalTimeGame","onGameEnd","ReactGA","pageview","clearInterval","setInterval","previousInputs","finalTime","control","changeTimeOnScoreChange","scrollTo","winner","minTime","getWinner","onEndPlayer","KingGame","order","changePointsOnScoreChange","index","newArray","splice","getPlayersOrder","findIndex","item","result","toUpperCase","MAX_POINTS","PointsGame","props","minPoints","MainPageTextContent","headLogo","href","winnerPlayer","gameStatus","gameSelected","pointsTypeSelected","goToMenu","GameController","alertBoxRef","elementsToRender","classList","add","innerHTML","cleanAlertBox","message","remove","showAlertBox","beginGame","AboutUs","onLinkClicked","Footer","Menu","isOpen","setIsOpen","onMenuClick","dataset","link","App","stateComponent","useState","useEffect","initialize","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","resources","en","translation","content","aboutus","aboutus1","aboutus2","welcomeMessage","instructions","error","nojugadores","description","jugadores","nuevojugador","ordenaleatorio","empezar","atras","ganador","tiempo","puntos","finjugador","total","ordenruta","fin","reset","vuelco","tocar","puerta","saltoobstaculo","reparacion","winch","puertaprogresion","distancia","anclajeindebido","juez","gametype","modojuego","tipopuntuacion","modojuegotiempo","modojuegopuntos","modojuegorey","simple","completa","descripcionPuntosSimple","descripcionPuntosCompleta","rey","es","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.79e29867.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7c7a4747.png\";","import * as React from 'react';\n\nfunction ControlText({\n        text,\n        step,\n        value,\n        onValueChange\n    }) {\n    const isNegativeControl = (step<0);\n    let boldValue = isNegativeControl ? value<0 : value>0;\n\n    function updateValue(step) {\n        if (!isNegativeControl && (value+step >= 0)) {\n                onValueChange(step);\n        } else if (isNegativeControl && (value+step <= 0)) {\n                onValueChange(step);\n        }\n    }\n\n    function getControlClass(initialClass) {\n        return boldValue ? `bold ${initialClass}` : `${initialClass}`;\n    }\n\n    return <div className=\"controlText\">\n        <button className='buttonControlTextPlus' onClick={() => {updateValue(step)}}>+</button>\n        <button className='buttonControlTextMinus' onClick={() => {updateValue(-step)}}>-</button>\n\n        <div className={getControlClass(\"controlTextText\")}>{text}: </div>\n        <div className={getControlClass(\"controlTextValue\")}>{value}</div>        \n    </div>;\n}\n\nexport default ControlText;","import ControlText from './components/ControlText';\n\nconst MODE_SIMPLE = 0;\nconst MODE_OFFICIAL = 1;\n\n\nconst Utils = {\n    secondsToTime(millis) {\n        const minutes = Math.floor(millis / 60000),\n            hours = Math.floor(minutes / 60), \n            seconds = ((millis % 60000) / 1000).toFixed(0);\n\n        return { \n            h: hours,\n            m: minutes,\n            s: seconds,\n            mm: millis % 1000\n        }\n    },\n    printTime(time) {\n        return `${String(time.h).padStart(2, '0')}:${String(time.m).padStart(2, '0')}:${String(time.s).padStart(2, '0')}:${String(time.mm).padStart(3, '0')}`\n    },\n    randomizeArray(array) {\n        let currentIndex = array.length,  randomIndex;\n\n        while (currentIndex !== 0) {\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n      \n        return array;\n    },\n    getControlTextArray: function(mode, controlTextValues, callback, i, t) {\n        let controlTextArray = [];\n\n        if (mode === MODE_OFFICIAL) {\n            controlTextArray.push(<ControlText value={controlTextValues[0]} onValueChange={(value)=> {callback(value, i, 0)}} initialValue={0} text={t('points.vuelco')} step={5} />);\n            controlTextArray.push(<ControlText value={controlTextValues[1]} onValueChange={(value)=> {callback(value, i, 1)}} initialValue={0} text={t('points.tocar')} step={3} />);\n            controlTextArray.push(<ControlText value={controlTextValues[2]} onValueChange={(value)=> {callback(value, i, 2)}} initialValue={0} text={t('points.puerta')} step={2} />);\n            controlTextArray.push(<ControlText value={controlTextValues[3]} onValueChange={(value)=> {callback(value, i, 3)}} initialValue={0} text={t('points.saltoobstaculo')} step={5} />);\n            controlTextArray.push(<ControlText value={controlTextValues[4]} onValueChange={(value)=> {callback(value, i, 4)}} initialValue={0} text={t('points.reparacion')} step={5} />);\n            controlTextArray.push(<ControlText value={controlTextValues[5]} onValueChange={(value)=> {callback(value, i, 5)}} initialValue={0} text={t('points.winch')} step={3} />);\n            controlTextArray.push(<ControlText value={controlTextValues[6]} onValueChange={(value)=> {callback(value, i, 6)}} initialValue={0} text={t('points.puertaprogresion')} step={-1} />);\n            controlTextArray.push(<ControlText value={controlTextValues[7]} onValueChange={(value)=> {callback(value, i, 7)}} initialValue={0} text={t('points.distancia')} step={1} />);\n            controlTextArray.push(<ControlText value={controlTextValues[8]} onValueChange={(value)=> {callback(value, i, 8)}} initialValue={0} text={t('points.anclajeindebido')} step={5} />);\n            controlTextArray.push(<ControlText value={controlTextValues[9]} onValueChange={(value)=> {callback(value, i, 9)}} initialValue={0} text={t('points.juez')} step={1} />);\n        } else {\n            controlTextArray.push(<ControlText value={controlTextValues[0]} onValueChange={(value)=> {callback(value, i, 0)}} initialValue={0} text={t('points.vuelco')} step={5} />);\n            controlTextArray.push(<ControlText value={controlTextValues[1]} onValueChange={(value)=> {callback(value, i, 1)}} initialValue={0} text={t('points.tocar')} step={3} />);\n            controlTextArray.push(<ControlText value={controlTextValues[2]} onValueChange={(value)=> {callback(value, i, 2)}} initialValue={0} text={t('points.puerta')} step={2} />);\n            controlTextArray.push(<ControlText value={controlTextValues[3]} onValueChange={(value)=> {callback(value, i, 3)}} initialValue={0} text={t('points.saltoobstaculo')} step={5} />);\n            controlTextArray.push(<ControlText value={controlTextValues[4]} onValueChange={(value)=> {callback(value, i, 4)}} initialValue={0} text={t('points.reparacion')} step={5} />);\n            controlTextArray.push(<ControlText value={controlTextValues[5]} onValueChange={(value)=> {callback(value, i, 5)}} initialValue={0} text={t('points.winch')} step={3} />);\n            controlTextArray.push(<ControlText value={controlTextValues[6]} onValueChange={(value)=> {callback(value, i, 6)}} initialValue={0} text={t('points.puertaprogresion')} step={-1} />);\n        }\n\n        return controlTextArray;\n    }\n}\n\n\nexport default Utils;","import * as React from 'react';\nimport Utils from '../Utils';\nimport { useTranslation } from 'react-i18next';\n\nconst AVATAR_API = \"https://eu.ui-avatars.com/api/?background=345B63&color=FFFFFF&name=\";\n\nfunction PlayerController({onPlayerNumerChange}) {\n    const [players, setPlayers] = useLocalStorageState('players');\n    const inputRef = React.useRef(null);\n    const inputId = Date.now();\n    const { t, i18n } = useTranslation();\n\n  React.useEffect(() => {\n    onPlayerNumerChange && onPlayerNumerChange(players);\n  }, [players]);\n\n    function addPlayer() {\n      const value = inputRef.current.value;\n      if (!value || value.trim().length===0) return;\n\n        const newPlayers = [...players];\n\n        newPlayers.push({\n            id: players.length,\n            name: inputRef.current.value,\n            avatar: `${AVATAR_API}${inputRef.current.value}`,\n            time: 0,\n            points: 0\n        });\n\n        const input = document.getElementById(inputId);\n        input.value = '';\n\n        setPlayers(newPlayers);\n        onPlayerNumerChange && onPlayerNumerChange(newPlayers);\n    }\n\n    function removePlayer(event) {\n      let newPlayers = [...players];\n\n      delete newPlayers[event.target.id];\n      newPlayers = newPlayers.filter((a) => a)\n      setPlayers(newPlayers);\n      onPlayerNumerChange && onPlayerNumerChange(newPlayers);\n    }\n\n    function randomizePlayers() {\n      const newPlayers = Utils.randomizeArray(players);\n      \n      setPlayers(newPlayers);\n      onPlayerNumerChange && onPlayerNumerChange(newPlayers);\n    }\n\n    const playersTxt = !players.length? t('description.nojugadores') : t('description.jugadores');\n\n    return <>\n      <div className=\"players rounded rounded1\">\n        <div className=\"headerText bold\">{playersTxt}</div>\n        <ul className=\"playersList\">\n            {players.map((player, i) => { \n                return <li className=\"importantNote rounded playerListItem\" key={i} value={player.name}>\n                  <div><img src={player.avatar} alt=\"avatar\"/>\n                    {player.name}\n                    <button className=\"buttonControlTextMinus\" id={i} onClick={removePlayer}>-</button>\n                  </div>\n                  </li>\n            })}\n        </ul>\n        {players.length>1 ? <button onClick={randomizePlayers}>{t('description.ordenaleatorio')}</button> : <></>}\n        <div className=\"headerText\">{t('description.nuevojugador')}</div>\n        <input id={inputId} ref={inputRef}></input>\n        <button className=\"buttonControlTextPlus\" onClick={addPlayer}>+</button>\n      </div></>;\n}\n\nfunction useLocalStorageState(key, defaultValue = [], {\n  serialize = JSON.stringify,\n  deserialize = JSON.parse\n} = {}) {\nconst [state, setState] = React.useState(\n  () => {\n    const valueLocalStorage = window.localStorage.getItem(key);\n\n    if (valueLocalStorage) {\n      return deserialize(valueLocalStorage);\n    }\n\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n  });\n\n  const prevKeyRef = React.useRef(key);\n\n  React.useEffect(() => {\n    if (prevKeyRef !== key) {\n      window.localStorage.removeItem(prevKeyRef);\n    }\n    window.localStorage.setItem(key, serialize(state));\n\n}, [key, serialize, state]);\n\nreturn [state, setState];\n}\n\nexport default PlayerController;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nfunction GameTypeController({onGameTypeChange, onPointsTypeChange, selectedGameType=0, selectedPointsType=0}) {\n    const { t, i18n } = useTranslation();\n    const labelsGameType = [t('gametype.tiempo'), \n            t('gametype.puntos'),\n            t('gametype.rey')],\n        textsGameType = [<div>{t('gametype.modojuegotiempo')}</div>,\n                <div>{t('gametype.modojuegopuntos')}</div>,\n                <div>{t('gametype.modojuegorey')}</div>\n            ];\n\n        const labelsPointsType = [t('gametype.simple'), t('gametype.completa')],\n      textsPointsType = [<div>{t('gametype.descripcionPuntosSimple')}</div>,\n            <div>{t('gametype.descripcionPuntosCompleta')}</div>\n            ];\n\n    const [state, setState] = React.useState({\n        gameType: selectedGameType,\n        pointsType: selectedPointsType\n    });\n    \n    function onSelectGameTypeChange(event) {\n        const selected = event.target.selectedIndex;\n\n        onGameTypeChange && onGameTypeChange(selected);\n        setState({\n            gameType: selected,\n            pointsType: state.pointsType\n        });\n    }\n\n    function onSelectPointsTypeChange(event) {\n        const selected = event.target.selectedIndex;\n\n        onPointsTypeChange && onPointsTypeChange(selected);\n        setState({\n            gameType: state.gameType,\n            pointsType: selected\n        });\n    }\n\n    return <>\n        <div className=\"gameType rounded1 rounded\">\n            <div className=\"headerText bold\">{t('gametype.modojuego')}:</div>\n            <select defaultValue={state.gameType} onChange={onSelectGameTypeChange}>\n                <option value=\"0\">{labelsGameType[0]}</option>\n                <option value=\"1\">{labelsGameType[1]}</option>\n                <option value=\"2\">{labelsGameType[2]}</option>\n            </select>\n            <div className=\"gameSelectText\">{textsGameType[state.gameType]}</div>\n        </div>\n\n        <div className=\"gameType rounded1 rounded\">\n            <div className=\"headerText bold\">{t('gametype.tipopuntuacion')}:</div>\n            <select defaultValue={state.pointsType} onChange={onSelectPointsTypeChange}>\n                <option value=\"0\">{labelsPointsType[0]}</option>\n                <option value=\"1\">{labelsPointsType[1]}</option>\n            </select>\n            <div className=\"gameSelectText\">{textsPointsType[state.pointsType]}</div>\n        </div>\n    </>;\n}\n\nexport default GameTypeController;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Utils from '../Utils';\n\nfunction TimerControl ({state, time, onPlayPauseChange}) {\n    const timeValue = Utils.secondsToTime(time);\n    const { t, i18n } = useTranslation();\n\n    return <div className=\"timerContainer rounded rounded2\"> {t('description.tiempo')}:\n        <div className=\"timer\">{`${String(timeValue.h).padStart(2, '0')}:${String(timeValue.m).padStart(2, '0')}:${String(timeValue.s).padStart(2, '0')}:${String(timeValue.mm).padStart(3, '0')}`}</div>\n        <button className=\"timerPlayButton importantNote\" onClick={onPlayPauseChange}>play/pause</button>\n    </div>;\n}\n\nexport default TimerControl;\n","import * as React from 'react';\nimport ControlText from './ControlText';\nimport { useTranslation } from 'react-i18next';\n\nconst MODE_OFFICIAL = 0;\n\nfunction ControlTextArray({players, player, pointsMode, onValueChange}) {\n    const controlArray = [];\n    const { t, i18n } = useTranslation();\n\n    if (pointsMode === MODE_OFFICIAL) {\n        controlArray.push(<ControlText value={players[player].controlTextValues[0]} onValueChange={(value)=> {onValueChange(value, player, 0)}} initialValue={0} text={t('points.vuelco')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[1]} onValueChange={(value)=> {onValueChange(value, player, 1)}} initialValue={0} text={t('points.tocar')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[2]} onValueChange={(value)=> {onValueChange(value, player, 2)}} initialValue={0} text={t('points.puerta')} step={2} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[3]} onValueChange={(value)=> {onValueChange(value, player, 3)}} initialValue={0} text={t('points.saltoobstaculo')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[4]} onValueChange={(value)=> {onValueChange(value, player, 4)}} initialValue={0} text={t('points.reparacion')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[5]} onValueChange={(value)=> {onValueChange(value, player, 5)}} initialValue={0} text={t('points.winch')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[6]} onValueChange={(value)=> {onValueChange(value, player, 6)}} initialValue={0} text={t('points.puertaprogresion')} step={-1} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[7]} onValueChange={(value)=> {onValueChange(value, player, 7)}} initialValue={0} text={t('points.distancia')} step={1} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[8]} onValueChange={(value)=> {onValueChange(value, player, 8)}} initialValue={0} text={t('points.anclajeindebido')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[9]} onValueChange={(value)=> {onValueChange(value, player, 9)}} initialValue={0} text={t('points.juez')} step={1} />);\n    } else {\n        controlArray.push(<ControlText value={players[player].controlTextValues[0]} onValueChange={(value)=> {onValueChange(value, player, 0)}} initialValue={0} text={t('points.vuelco')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[1]} onValueChange={(value)=> {onValueChange(value, player, 1)}} initialValue={0} text={t('points.tocar')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[2]} onValueChange={(value)=> {onValueChange(value, player, 2)}} initialValue={0} text={t('points.puerta')} step={2} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[3]} onValueChange={(value)=> {onValueChange(value, player, 3)}} initialValue={0} text={t('points.saltoobstaculo')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[4]} onValueChange={(value)=> {onValueChange(value, player, 4)}} initialValue={0} text={t('points.reparacion')} step={5} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[5]} onValueChange={(value)=> {onValueChange(value, player, 5)}} initialValue={0} text={t('points.winch')} step={3} />);\n        controlArray.push(<ControlText value={players[player].controlTextValues[6]} onValueChange={(value)=> {onValueChange(value, player, 6)}} initialValue={0} text={t('points.puertaprogresion')} step={-1} />);\n    }\n    return controlArray;\n}\n\nexport default ControlTextArray;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TimerControl from './TimerControl';\nimport ControlTextArray from './ControlTextArray';\nimport Utils from '../Utils';\nimport ReactGA from 'react-ga';\n\nconst STATE_PLAY = 'play';\nconst STATE_PAUSE = 'pause';\n\nconst MODE_SIMPLE = 0;\nconst MODE_OFFICIAL = 1;\nlet tickTime = 0;\nlet timer = null;\n\nfunction TotalTimeGame({mode, onGameEnd, players}) {\n    const [state, setState] = React.useState(()=>{ return initControlTestValues({ mode, players }) });\n    const { t, i18n } = useTranslation();\n    \n    React.useEffect(() => {\n        ReactGA.pageview('/totaltimegame/');\n    },[]);\n\n    React.useEffect(()=> {\n        const newState = {\n            ...state,\n            timeStart: Date.now()\n        };\n\n        if (state.state === STATE_PLAY) {\n            timer && clearInterval(timer);\n            newState.millis = tickTime;\n            timer = setInterval(() => {timerCount(newState)}, 10);\n            setState(previousInputs => ({ ...previousInputs,...newState}));\n        } else {\n            const finalTime = tickTime + (Date.now() - newState.timeStart);\n            newState.millis = finalTime;\n            tickTime = finalTime;\n            timer && clearInterval(timer);\n            timer = null;\n            setState(previousInputs => ({ ...previousInputs,...newState}));\n        }\n    }, [state.state]);\n\n    function changeTimeOnScoreChange(value, player, control) {\n        const timeModifier = value * 1000 + state.timeModifier,\n            players = [...state.players];\n    \n        players[player].controlTextValues = [...players[player].controlTextValues];\n        players[player].controlTextValues[control] += value;\n        players[player].points += value;\n    \n        setState(previousInputs => ({ ...previousInputs,\n            players: players,\n            timeModifier: timeModifier\n        }));\n    }\n\n    function timerCount(state) {\n        tickTime += 10;\n        setState(previousInputs => ({ ...previousInputs,millis: tickTime}));\n    };\n    \n    function changePlayPauseTimeControl() {\n        if(state.state === STATE_PAUSE) {\n            state.state = STATE_PLAY;\n        } else {\n            state.state = STATE_PAUSE;\n        }\n\n        setState(previousInputs=>({\n            ...previousInputs,\n            state: state.state\n        }));\n    }\n\n    function onReset() {\n        let newState = {\n            ...state, \n        };\n        window.scrollTo(0,0);\n\n        tickTime = 0;\n        newState = initControlTestValues(newState);\n        newState.players[state.currentPlayer].time = 0;\n        newState.players[state.currentPlayer].points = 0;  \n        newState.currentPlayer = state.currentPlayer;\n        newState.state = STATE_PAUSE;\n        setState(previousInputs => ({ ...previousInputs,...newState}));\n    }\n\n    function onEndPlayer() {\n        const newState = initControlTestValues(state);;\n            \n        window.scrollTo(0,0);\n        newState.state = STATE_PAUSE;\n        newState.players[state.currentPlayer].time = tickTime + state.timeModifier;\n    \n        if (state.currentPlayer+1 < state.players.length) {\n            tickTime = 0;\n            newState.millis = 0;\n            newState.timeModifier = 0;\n            newState.currentPlayer = state.currentPlayer+1;\n            setState(previousInputs => ({ \n                ...previousInputs,\n                ...newState}));\n        } else {\n            onGameEnd && onGameEnd(getWinner(state));\n        }\n    }\n\n    if (state.players.length>0) {\n        const time = Utils.secondsToTime(state.millis + state.timeModifier),\n            currentPlayer = state.players[state.currentPlayer];\n        let controlTextArray = [];\n\n        controlTextArray = ControlTextArray({\n            players: state.players,\n            player: state.currentPlayer,\n            pointsMode: state.mode,\n            onValueChange: (value, player, control)=> {\n                changeTimeOnScoreChange(value, player, control)\n            }});\n\n        return <div className=\"gameContainer\">\n            <div className=\"playersList\">\n                <div className=\"playerListItem importantNote rounded\">\n                    <img src={currentPlayer.avatar} alt=\"avatar\"/>\n                    {currentPlayer.name}\n                </div>\n            </div>\n\n            <div className=\"totalTimeContainer rounded\">\n                {t('description.total')}: <div className=\"totalValue\">{Utils.printTime(time)}</div>\n            </div>\n            <TimerControl \n                state={state.state}\n                time={state.millis} \n                onPlayPauseChange={changePlayPauseTimeControl}\n            />\n            <div className=\"controlTextContainer rounded rounded1\">\n                {controlTextArray}\n            </div>\n            <button onClick={onReset} className=\"resetButton\">{t('description.reset')}</button>\n            <button className=\"importantNote\" onClick={()=>{\n                onEndPlayer(state, setState, onGameEnd)\n                }}>{t('description.finjugador')} ({currentPlayer.name})</button><p />\n        </div>\n    }\n}\n\nfunction initControlTestValues({mode, players}) {\n    const newState = {\n        millis: 0,\n        timeModifier: 0,\n        timeStart: 0,\n        players: [...players],\n        currentPlayer: 0,\n        mode: mode,\n        state: STATE_PAUSE\n    }\n\n    for(let i=0; i<newState.players.length;i++) {\n        newState.players[i].controlTextValues = mode === MODE_OFFICIAL ? new Array(10) : new Array(7);\n\n        for(let j=0; j<newState.players[i].controlTextValues.length; j++) {\n            newState.players[i].controlTextValues[j] = 0;\n        }\n    }\n\n\n    return newState;\n}\n\nfunction getWinner(state) {\n    let winner = -1, minTime=5*60*3600;\n\n    for (let i=0;i<state.players.length;i++) {\n        if (state.players[i].time < minTime) {\n            minTime = state.players[i].time;\n            winner = i;\n        }\n    }\n\n    return winner;\n}\n\nexport default TotalTimeGame;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ControlTextArray from './ControlTextArray';\nimport ReactGA from 'react-ga';\n\nconst MODE_SIMPLE = 0;\nconst MODE_OFFICIAL = 1;\n\nfunction KingGame({mode, onGameEnd, players}) {\n    const [state, setState] = React.useState(()=>{ return initControlTestValues({ mode, players }) });\n    const { t, i18n } = useTranslation();\n\n    function changePointsOnScoreChange(points, player, control) {\n        const players = [...state.players]\n        const order = getPlayersOrder(state.order.findIndex(item => item.id===state.players[player].id), state.order);\n\n        players[player].points += points;\n        players[player].controlTextValues = [...players[player].controlTextValues];\n        players[player].controlTextValues[control] += points;\n                \n        setState(previousInputs => ({ ...previousInputs,\n            players: players,\n            order: order\n        }));\n    }\n\n    function gameEnd() {\n        let winner = 0;\n\n        for(let i=0; i<state.players.length;i++) {\n            if (state.players[i].points < state.players[winner].points) {\n                winner = i;\n            }\n        }\n        onGameEnd(winner);\n    }\n\n    React.useEffect(() => {\n        ReactGA.pageview('/kinggame/');\n    },[]);\n\n    let result = [];\n\n    result.push(<div>{t('description.ordenruta')}:</div>);\n    for(let i=0;i<state.players.length;i++) {\n        result.push(<>\n            <div>\n                <div className=\"controlTextContainerQueue rounded bold\">\n                    {state.order[i].name}: {state.order[i].points} ptos\n                </div>\n            </div>\n        </>);\n    }\n\n    result.push(<p>{t('description.puntos').toUpperCase()}:</p>);\n    for(let i=0;i<state.players.length;i++) {\n        result.push(<>\n            <div className=\"playerInfo\">\n                <div className=\"headerPlayer importantNote rounded2 rounded\">\n                    <div className=\"bold\">{state.players[i].name}</div>\n                    {t('description.total')}: { state.players[i].points}\n                </div>\n                <div className=\"controlTextContainer rounded rounded1\">\n                    {ControlTextArray({\n                        players: state.players, \n                        player: i, \n                        pointsMode: state.mode, \n                        onValueChange: (value, player, control)=> {changePointsOnScoreChange(value, player, control)}})}\n                </div>\n            </div>\n        </>);\n    }\n\n    result.push(<button className=\"importantNote\" onClick={gameEnd}>{t('description.fin')}</button>);\n\n    return result;\n}\n\nfunction initControlTestValues({mode, players}) {\n    const newState = {\n        players: [...players],\n        mode: mode,\n        order: [...players]\n    }\n\n    for(let i=0; i<newState.players.length;i++) {\n        newState.players[i].controlTextValues = mode === MODE_OFFICIAL ? new Array(10) : new Array(7);\n\n        for(let j=0; j<newState.players[i].controlTextValues.length; j++) {\n            newState.players[i].controlTextValues[j] = 0;\n        }\n    }\n\n    return newState;\n}\n\nfunction getPlayersOrder(index, array) {\n    const newArray = [...array];\n\n    newArray.push(newArray.splice(index, 1)[0]);\n\n    return newArray;\n}\n\nexport default KingGame;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ControlText from './ControlText';\nimport ControlTextArray from './ControlTextArray';\nimport ReactGA from 'react-ga';\n\nconst MODE_SIMPLE = 0;\nconst MODE_OFFICIAL = 1;\nconst MAX_POINTS = 10000000;\n\nfunction PointsGame({mode, onGameEnd, players}) {\n    const [state, setState] = React.useState(()=>{ return initControlTestValues({ mode, players }) });\n    const { t, i18n } = useTranslation();\n\n    function changePointsOnScoreChange(value, player, control) {\n        players[player].controlTextValues = [...players[player].controlTextValues];\n        players[player].controlTextValues[control] += value;\n        players[player].points += value;\n    \n        setState(previousInputs => ({ ...previousInputs,\n            players: players\n        }));\n    }\n\n    function onEndPlayer() {\n        window.scrollTo(0,0);\n        if (state.currentPlayer+1 < state.players.length) {\n            setState((state, props)=> {\n                return {\n                    ...initControlTestValues(state),\n                    points: 0,\n                    currentPlayer: state.currentPlayer+1\n                };\n            });\n        } else {\n            onGameEnd && onGameEnd(getWinner(state));\n        }\n    }\n\n    function onReset() {\n        window.scrollTo(0,0);\n        state.players[state.currentPlayer].points = 0;\n        setState((state, props)=> {\n            return {\n                ...initControlTestValues(state),\n                players: [...state.players],\n                currentPlayer: state.currentPlayer\n            };\n        });\n    }\n\n    React.useEffect(() => {\n        ReactGA.pageview('/pointsgame/');\n    },[]);\n\n    if (state.players.length>0) {\n        const currentPlayer = state.players[state.currentPlayer];\n        let controlTextArray = [];\n\n        controlTextArray = ControlTextArray({\n            players: state.players, \n            player: state.currentPlayer, \n            pointsMode: state.state, \n            onValueChange: (value, player, control)=> {changePointsOnScoreChange(value, player, control)}});\n\n        return <div className=\"gameContainer\">\n\n            <div className=\"playerInfo\">\n                <div className=\"headerPlayer importantNote rounded2 rounded\">\n                    <div className=\"bold\">{currentPlayer.name}</div>\n                    {`${t('description.total')} ${t('description.puntos')}`}: { currentPlayer.points}\n                </div>\n            </div>\n\n            <div className=\"controlTextContainer rounded rounded1\">\n                {controlTextArray}\n            </div>\n            <button onClick={onReset} className=\"resetButton\">{t('description.reset')}</button>\n            <button className=\"importantNote\" onClick={onEndPlayer}>{t('description.finjugador')} ({currentPlayer.name})</button><p />\n        </div>\n    }\n}\n\nfunction initControlTestValues({mode, players}) {\n    const newState = {\n        currentPlayer: 0,\n        players: [...players],\n        mode: mode,\n        points: 0\n    };\n\n    for(let i=0; i<newState.players.length;i++) {\n        newState.players[i].controlTextValues = mode === MODE_OFFICIAL ? new Array(10) : new Array(7);\n\n        for(let j=0; j<newState.players[i].controlTextValues.length; j++) {\n            newState.players[i].controlTextValues[j] = 0;\n        }\n    }\n\n    return newState;\n}\n\nfunction getWinner(state) {\n    let winner = -1, minPoints=MAX_POINTS;\n\n    for (let i=0;i<state.players.length;i++) {\n        if (state.players[i].points < minPoints) {\n            minPoints = state.players[i].points;\n            winner = i;\n        }\n    }\n\n    return winner;\n}\n\nexport default PointsGame;","export default __webpack_public_path__ + \"static/media/img00.612023be.png\";","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport headLogo from '../resources/img/img00.png';\n\nfunction MainPageTextContent() {\n    const { t, i18n } = useTranslation();\n\n    return <div className=\"aboutUsContent\">\n    <b>crawlear.com</b> {t('content.welcomeMessage')}\n    <p>\n        <figure>\n            <img className=\"contentImg\" alt=\"crawlers in action\" src={headLogo}></img>\n            <figcaption><a href=\"https://www.instagram.com/p/CT7FX_CMag7/\">img @takezorc</a></figcaption>\n        </figure>\n    </p>\n    <p>{t('content.instructions')}</p>\n\n    </div>;\n}\n\nexport default MainPageTextContent;\n\n","import * as React from 'react';\nimport PlayerController from './PlayerController';\nimport GameTypeController from './GameTypeController';\nimport TotalTimeGame from './TotalTimeGame';\nimport KingGame from './KingGame';\nimport PointsGame from './PointsGame';\nimport Utils from '../Utils';\nimport MainPageTextContent from './MainPageTextContent';\nimport { useTranslation } from 'react-i18next';\nimport ReactGA from 'react-ga';\n\nconst GAME_STATUS_MENU = 0;\nconst GAME_STATUS_PLAY = 1;\nconst GAME_STATUS_FINISH = 2;\n\nconst GAME_TYPE_TIME = 0;\nconst GAME_TYPE_POINTS = 1;\nconst GAME_TYPE_KING = 2;\n\nconst GAME_MODE_SIMPLE = 0;\nconst GAME_MODE_COMPLETE = 1;\n\nfunction GameController(props) {\n    const alertBoxRef = React.useRef();\n    const elementsToRender = [];\n\n    const { t, i18n } = useTranslation();\n    const [state, setState] = React.useState({\n        players: [], \n        winner: 0,\n        gameStatus: GAME_STATUS_MENU,\n        gameSelected: GAME_TYPE_TIME,\n        pointsTypeSelected: GAME_MODE_SIMPLE\n    });\n\n    React.useEffect(() => {\n        if(state.gameStatus === GAME_STATUS_MENU) {\n            ReactGA.pageview('/menu/');\n        }\n    },[state.gameStatus]);\n\n    elementsToRender.push(<div ref={alertBoxRef} className=\"hideAlert alertBox\"></div>);\n\n    switch(state.gameStatus) {\n        case GAME_STATUS_MENU:\n            elementsToRender.push(<MainPageTextContent />);\n            elementsToRender.push(<PlayerController onPlayerNumerChange={(players)=>{\n                onPlayerNumerChange(players,state, setState, alertBoxRef)}\n                }/>);\n            elementsToRender.push(<GameTypeController \n                selectedGameType={state.gameSelected}\n                selectedPointsType={state.pointsTypeSelected}\n                onGameTypeChange={(selectedIndex) => {\n                    onGameTypeChange(selectedIndex, setState, state);\n                    }} \n                onPointsTypeChange={(selectedIndex) => {\n                    onPointsTypeChange(selectedIndex, setState, state);\n                }}/>);\n            elementsToRender.push(<p>\n                    <button className=\"importantNote\" onClick={() => {\n                        beginGame(state, setState, alertBoxRef, t)\n                        }}>{t('description.empezar')}</button>\n                </p>);\n                break;\n        case GAME_STATUS_PLAY:\n            if (state.gameSelected === GAME_TYPE_TIME) {\n                elementsToRender.push(<TotalTimeGame \n                    mode={state.pointsTypeSelected}\n                    onGameEnd={(winnerPlayer)=> {\n                        onGameEnd(winnerPlayer, state, setState)\n                    }}\n                    players={state.players}\n                />);\n            } else if (state.gameSelected === GAME_TYPE_KING) {\n                elementsToRender.push(<KingGame \n                    onGameEnd={(winnerPlayer)=> {\n                        onGameEnd(winnerPlayer, state, setState)\n                    }}\n                    players={state.players} \n                    mode={state.pointsTypeSelected}\n                    />);\n            } else if (state.gameSelected === GAME_TYPE_POINTS) {\n                elementsToRender.push(<PointsGame \n                    mode={state.pointsTypeSelected}\n                    onGameEnd={(winnerPlayer)=> {\n                        onGameEnd(winnerPlayer, state, setState)\n                    }}\n                    players={state.players}\n                />);\n            }\n            elementsToRender.push(<button onClick={() => {\n                goToMenu(state, setState)\n            }}>{t('description.atras')}</button>);\n            break;\n        default:\n            elementsToRender.push(<div className=\"winnerBox importantNote rounded\">\n                {t('description.ganador')}: {state.players[state.winner].name} <br />\n                {t('description.tiempo')}: {Utils.printTime(Utils.secondsToTime(state.players[state.winner].time))} <br />\n                {t('description.puntos')}: {state.players[state.winner].points} \n            </div>);\n            elementsToRender.push(<div className=\"pointsTable rounded rounded1\">\n                {state.players.map((player, i) => { \n                    return <div className=\"winnerBox rounded\" key={i} value={player.name}>\n                            <div className=\"headerPlayer rounded2 bold\">\n                                {player.name}\n                            </div>\n                            {t('description.tiempo')}: {Utils.printTime(Utils.secondsToTime(player.time))}<br />\n                            {t('description.puntos')}: {player.points}\n                        </div>\n                })}\n            </div>);\n            elementsToRender.push(<button onClick={() => {\n                goToMenu(state, setState)\n            }}>{t('description.atras')}</button>);\n    }\n\n    return elementsToRender;\n}\n\nfunction cleanAlertBox(alertBoxRef) {\n    alertBoxRef.current.classList.add('hideAlert');;\n    alertBoxRef.current.innerHTML = '';\n}\n\nfunction onPointsTypeChange(selectedIndex, setState, state) {\n    setState({\n        players: state.players, \n        winner: state.winner,\n        gameStatus: state.gameStatus,\n        gameSelected: state.gameSelected,\n        pointsTypeSelected: selectedIndex\n    });\n}\n\nfunction onGameTypeChange(selectedIndex, setState, state) {\n    setState({\n        players: state.players, \n        winner: state.winner,\n        gameStatus: state.gameStatus,\n        gameSelected: selectedIndex,\n        pointsTypeSelected: state.pointsTypeSelected\n    });\n}\n\nfunction onGameEnd(winnerPlayer, state, setState) {\n    window.scrollTo(0,0);\n    setState({\n        players: state.players, \n        winner: winnerPlayer,\n        gameStatus: GAME_STATUS_FINISH,\n        gameSelected: state.gameSelected,\n        pointsTypeSelected: state.pointsTypeSelected\n    });\n}\n\nfunction onPlayerNumerChange(players,state, setState, alertBoxRef) {\n    cleanAlertBox(alertBoxRef);\n    setState({\n        players: players, \n        winner: state.winner,\n        gameStatus: state.gameStatus,\n        gameSelected: state.gameSelected,\n        pointsTypeSelected: state.pointsTypeSelected\n    });\n}\n\nfunction beginGame(state, setState, alertBoxRef, t) {\n    window.scrollTo(0,0);\n    if (state.players.length>0) {\n        const newState = {...state};\n\n        setState({\n            players: newState.players,\n            winner: newState.winner, \n            gameStatus: GAME_STATUS_PLAY,\n            gameSelected: newState.gameSelected,\n            pointsTypeSelected: newState.pointsTypeSelected\n        });\n    } else {\n        showAlertBox(t('error.nojugadores'), alertBoxRef);\n    }\n}\n\nfunction goToMenu(state, setState) {\n    window.scrollTo(0,0);\n    setState({\n        players: state.players, \n        winner: state.winner,\n        gameStatus: GAME_STATUS_MENU,\n        gameSelected: state.gameSelected,\n        pointsTypeSelected: state.pointsTypeSelected\n    });\n}\n\nfunction showAlertBox(message, alertBoxRef) {\n    alertBoxRef.current.classList.remove('hideAlert');;\n    alertBoxRef.current.innerHTML = message;\n}\n\nexport default GameController;","import * as React from 'react';\nimport ReactGA from 'react-ga';\nimport { useTranslation } from 'react-i18next';\n\nimport '../resources/css/AboutUs.css';\n\nfunction AboutUs({onLinkClicked}) {\n    const { t, i18n } = useTranslation();\n\n    React.useEffect(() => {\n        ReactGA.pageview('/aboutus/');\n    },[]);\n\n    return <div className=\"aboutUsContent\">\n        <b>crawlear.com</b> {t('content.aboutus')}\n        <p>{t('content.aboutus1')}</p>\n        <p>{t('content.aboutus2')}</p>\n        <p><a onClick={onLinkClicked} href=\"#void\">{'>'} Volver</a></p>\n    </div>;\n}\n\nexport default AboutUs;","import * as React from 'react';\n\nfunction Footer() {\n\n    return <div className=\"Footer\">\n        ©crawlear.com 2021\n    </div>;\n}\n\nexport default Footer;","import * as React from 'react';\nimport { isCompositeComponent } from 'react-dom/test-utils';\nimport '../resources/css/Menu.css';\nimport ReactGA from 'react-ga';\n\nfunction Menu({onLinkClicked}) {\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    function onMenuClick() {\n        setIsOpen(!isOpen);\n    }\n\n    function clickAction(event) {\n        onLinkClicked(event.target.dataset.link);\n    }\n\n    React.useEffect(() => {\n        ReactGA.pageview('/menu/');\n    },[]);\n\n    if (isOpen) {\n        return <div className=\"rounded menuContainer open\" onClick={onMenuClick}>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"linksContainer\">\n                <ul>\n                    <li><a href=\"#void\" data-link=\"aboutus\" onClick={clickAction}>About us</a></li>\n                    <li><a href=\"/privacy.html\">Privacy Policy</a></li>\n                </ul>\n            </div>\n        </div>\n    } else {\n        return <div className=\"rounded menuContainer closed\" onClick={onMenuClick}>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n            <div className=\"burguerMenuBar\"></div>\n        </div>;\n    }\n\n}\n\nexport default Menu;","\nimport './resources/css/Base.css';\nimport './resources/css/App.css';\nimport './resources/css/Components.css';\nimport './resources/css/Footer.css';\n\nimport logo from './resources/img/logo.png';\nimport GameController from './components/GameController';\nimport AboutUs from './components/AboutUs';\nimport Footer from './components/Footer';\nimport Menu from './components/Menu';\nimport React from 'react';\nimport ReactGA from 'react-ga';\n\nconst STATE_GAME = 0;\nconst STATE_ABOUTUS = 1;\n\nfunction App() {\n  const [state, setState] = React.useState(STATE_GAME);\n  let stateComponent;\n\n  React.useEffect(() => {\n    ReactGA.initialize('UA-156750890-2');\n    ReactGA.pageview('/');\n  }, [])\n\n  function onLinkClickedMenu(link) {\n    setState(STATE_ABOUTUS);\n  }\n\n  function onLinkClickedVolver()\n  {\n    setState(STATE_GAME);\n  }\n\n  if(state === STATE_GAME) {\n    stateComponent = <GameController />;\n  } else if(state === STATE_ABOUTUS) {\n    stateComponent = <AboutUs onLinkClicked={onLinkClickedVolver} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Menu onLinkClicked={onLinkClickedMenu}></Menu>\n        <img src={logo} alt=\"logo\" />\n      </header>\n\n      <div className=\"AppMainContainer\">\n        {stateComponent}\n      </div>\n\n      <div className=\"adsContainer\"></div>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    debug: true,\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false\n    },\n    resources: {\n      en: {\n        translation: {\n          content: {\n            aboutus: 'is a page to help on your crawler \"pachangas\" (spanish name for a \"friends organized game\") with friends. It arises from the hobby of a group of friends after discovering the world of the crawler, entering the 1/24 scale',\n            aboutus1: 'Instagram: @takezorc',\n            aboutus2: 'Barcelona (Spain) 2021',\n            welcomeMessage: 'is a score board for your crawler pachangas (spanish name for a \"friends organized game\").',\n            instructions: 'First add the players, select the game mode, the points type and push the Begin button.'\n          },\n          error: {\n              nojugadores: 'First add the players and select the type of game and score'\n          },\n          description: {\n            nojugadores: 'No players',\n            jugadores: 'Players',\n            nuevojugador: 'New player',\n            ordenaleatorio: 'Random order',\n            empezar: 'Begin',\n            atras: 'Back',\n            ganador: 'WINNER',\n            tiempo: 'TIME',\n            puntos: 'POINTS',\n            finjugador: 'end player',\n            total: 'TOTAL',\n            ordenruta: 'Rute ORDER',\n            fin: 'End',\n            reset: 'Reset'\n          },\n          points: {\n            vuelco: 'overturn',\n            tocar: 'touch',\n            puerta: 'gate',\n            saltoobstaculo: 'obstacle jump',\n            reparacion: 'repair',\n            winch: 'winch',\n            puertaprogresion: 'progression gate',\n            distancia: 'distance',\n            anclajeindebido: 'improper anchor',\n            juez: 'judge'\n          },\n          gametype: {\n            modojuego: 'Game mode',\n            tipopuntuacion: 'Points type',\n            modojuegotiempo: 'A section is chosen and all participants will run it one by one and in the pre-established order. It runs on time and the points accumulate seconds to the total time. The winner will be the player with the shortest time.',\n            modojuegopuntos: 'A section is chosen and all participants will run it one by one and in the pre-established order. Points are run and the winner will be the player with the lowest score.',\n            modojuegorey: 'There is no pre-established route and the first participant, the King, chooses the path when playing. All participants run at the same time in line following the same route as the King. If a player scores he goes to the end of the queue. The winner will be the player with the lowest score.',\n            simple: 'Simple',\n            completa: 'Complete',\n            descripcionPuntosSimple: 'Winch, touch, obstacle jump, repair, door, overturn and progression door',\n            descripcionPuntosCompleta: 'Winch, touch, distance, obstacle jump, repair, door, overturn, progression door, improper anchor and judge',\n            tiempo: 'Time',\n            puntos: 'Points',\n            rey: 'The King'\n          }\n        }\n      },\n      es: {\n        translation: {\n          content: {\n            aboutus: 'es una página para ayudar a puntuar las pachangas de crawler con los amigos. Surge a partir de la afición de un grupo de amigos después de descubrir el mundo del crawler, entrando por la escala 1/24',\n            aboutus1: 'Instagram @takezorc',\n            aboutus2: 'Barcelona 2021',\n            welcomeMessage: 'es un tablero de puntuación para tus pachangas de crawler con los amigos.',\n            instructions: 'Primero añada los jugadores, seleccione el modo de juego, el tipo de puntuación y presione Empezar.'\n          },\n          error: {\n              nojugadores: 'Primero añade los jugadores y selecciona el tipo de juego y puntuación'\n          },\n          description: {\n              nojugadores: 'No hay jugadores',\n              jugadores: 'Jugadores',\n              nuevojugador: 'Nuevo jugador',\n              ordenaleatorio: 'Orden aleatorio',\n              empezar: 'Empezar',\n              atras: 'Atrás',\n              ganador: 'GANADOR',\n              tiempo: 'TIEMPO',\n              puntos: 'PUNTOS',\n              finjugador: 'fin jugador',\n              total: 'TOTAL',\n              ordenruta: 'ORDEN de Ruta',\n              fin: 'Fin',\n              reset: 'Reiniciar'\n          },\n          points: {\n            vuelco: 'vuelco',\n            tocar: 'tocar',\n            puerta: 'puerta',\n            saltoobstaculo: 'salto obstaculo',\n            reparacion: 'reparacion',\n            winch: 'winch',\n            puertaprogresion: 'puerta progresion',\n            distancia: 'distancia',\n            anclajeindebido: 'anclaje indebido',\n            juez: 'juez'\n          },\n          gametype: {\n            modojuego: 'Modo de juego',\n            tipopuntuacion: 'Tipo de puntuacion',\n            modojuegotiempo: 'Se escoge un tramo y todos los participantes lo correrán uno por uno y en el orden preestablecido. Se corre a tiempo y los puntos acumulan segundos al tiempo total. El ganador será el jugador con menor tiempo.',\n            modojuegopuntos: 'Se escoge un tramo y todos los participantes lo correrán uno por uno y en el orden preestablecido. Se corre a puntos y el ganador será el jugador con menor puntuación.',\n            modojuegorey: 'No hay ruta preestablecida y el primer participante, el Rey, escoge el camino al jugar. Todos los participantes corren a la vez en línea siguiendo la misma ruta que el Rey. Si un jugador puntúa pasa al final de la cola. El ganador será el jugador con menor puntuación.',\n            simple: 'Simple',\n            completa: 'Completa',\n            descripcionPuntosSimple: 'Winch, tocar, salto obstaculo, reparacion, puerta, vuelco y puerta progresion',\n            descripcionPuntosCompleta: 'Winch, tocar, distancia, salto obstaculo, reparacion, puerta, vuelco, puerta progresion, anclaje indebido y juez',\n            tiempo: 'Tiempo',\n            puntos: 'Puntos',\n            rey: 'El Rey'\n          }\n        }\n      }\n    }\n  });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport i18n from './language/i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}